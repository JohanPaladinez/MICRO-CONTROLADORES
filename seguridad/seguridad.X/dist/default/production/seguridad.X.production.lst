

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Oct 03 10:41:53 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,space=0,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    13                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=2
    14                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60     0004                     fsr             equ	4
    61     0004                     fsr0            equ	4
    62     0000                     indf            equ	0
    63     0000                     indf0           equ	0
    64     0002                     pc              equ	2
    65     0002                     pcl             equ	2
    66     000A                     pclath          equ	10
    67     0003                     status          equ	3
    68     0000                     INDF            equ	0	;# 
    69     0001                     TMR0            equ	1	;# 
    70     0002                     PCL             equ	2	;# 
    71     0003                     STATUS          equ	3	;# 
    72     0004                     FSR             equ	4	;# 
    73     0005                     PORTA           equ	5	;# 
    74     0006                     PORTB           equ	6	;# 
    75     0007                     PORTC           equ	7	;# 
    76     0008                     PORTD           equ	8	;# 
    77     0009                     PORTE           equ	9	;# 
    78     000A                     PCLATH          equ	10	;# 
    79     000B                     INTCON          equ	11	;# 
    80     000C                     PIR1            equ	12	;# 
    81     000D                     PIR2            equ	13	;# 
    82     000E                     TMR1            equ	14	;# 
    83     000E                     TMR1L           equ	14	;# 
    84     000F                     TMR1H           equ	15	;# 
    85     0010                     T1CON           equ	16	;# 
    86     0011                     TMR2            equ	17	;# 
    87     0012                     T2CON           equ	18	;# 
    88     0013                     SSPBUF          equ	19	;# 
    89     0014                     SSPCON          equ	20	;# 
    90     0015                     CCPR1           equ	21	;# 
    91     0015                     CCPR1L          equ	21	;# 
    92     0016                     CCPR1H          equ	22	;# 
    93     0017                     CCP1CON         equ	23	;# 
    94     0018                     RCSTA           equ	24	;# 
    95     0019                     TXREG           equ	25	;# 
    96     001A                     RCREG           equ	26	;# 
    97     001B                     CCPR2           equ	27	;# 
    98     001B                     CCPR2L          equ	27	;# 
    99     001C                     CCPR2H          equ	28	;# 
   100     001D                     CCP2CON         equ	29	;# 
   101     001E                     ADRESH          equ	30	;# 
   102     001F                     ADCON0          equ	31	;# 
   103     0081                     OPTION_REG      equ	129	;# 
   104     0085                     TRISA           equ	133	;# 
   105     0086                     TRISB           equ	134	;# 
   106     0087                     TRISC           equ	135	;# 
   107     0088                     TRISD           equ	136	;# 
   108     0089                     TRISE           equ	137	;# 
   109     008C                     PIE1            equ	140	;# 
   110     008D                     PIE2            equ	141	;# 
   111     008E                     PCON            equ	142	;# 
   112     008F                     OSCCON          equ	143	;# 
   113     0090                     OSCTUNE         equ	144	;# 
   114     0091                     SSPCON2         equ	145	;# 
   115     0092                     PR2             equ	146	;# 
   116     0093                     SSPADD          equ	147	;# 
   117     0093                     SSPMSK          equ	147	;# 
   118     0093                     MSK             equ	147	;# 
   119     0094                     SSPSTAT         equ	148	;# 
   120     0095                     WPUB            equ	149	;# 
   121     0096                     IOCB            equ	150	;# 
   122     0097                     VRCON           equ	151	;# 
   123     0098                     TXSTA           equ	152	;# 
   124     0099                     SPBRG           equ	153	;# 
   125     009A                     SPBRGH          equ	154	;# 
   126     009B                     PWM1CON         equ	155	;# 
   127     009C                     ECCPAS          equ	156	;# 
   128     009D                     PSTRCON         equ	157	;# 
   129     009E                     ADRESL          equ	158	;# 
   130     009F                     ADCON1          equ	159	;# 
   131     0105                     WDTCON          equ	261	;# 
   132     0107                     CM1CON0         equ	263	;# 
   133     0108                     CM2CON0         equ	264	;# 
   134     0109                     CM2CON1         equ	265	;# 
   135     010C                     EEDATA          equ	268	;# 
   136     010C                     EEDAT           equ	268	;# 
   137     010D                     EEADR           equ	269	;# 
   138     010E                     EEDATH          equ	270	;# 
   139     010F                     EEADRH          equ	271	;# 
   140     0185                     SRCON           equ	389	;# 
   141     0187                     BAUDCTL         equ	391	;# 
   142     0188                     ANSEL           equ	392	;# 
   143     0189                     ANSELH          equ	393	;# 
   144     018C                     EECON1          equ	396	;# 
   145     018D                     EECON2          equ	397	;# 
   146     0000                     INDF            equ	0	;# 
   147     0001                     TMR0            equ	1	;# 
   148     0002                     PCL             equ	2	;# 
   149     0003                     STATUS          equ	3	;# 
   150     0004                     FSR             equ	4	;# 
   151     0005                     PORTA           equ	5	;# 
   152     0006                     PORTB           equ	6	;# 
   153     0007                     PORTC           equ	7	;# 
   154     0008                     PORTD           equ	8	;# 
   155     0009                     PORTE           equ	9	;# 
   156     000A                     PCLATH          equ	10	;# 
   157     000B                     INTCON          equ	11	;# 
   158     000C                     PIR1            equ	12	;# 
   159     000D                     PIR2            equ	13	;# 
   160     000E                     TMR1            equ	14	;# 
   161     000E                     TMR1L           equ	14	;# 
   162     000F                     TMR1H           equ	15	;# 
   163     0010                     T1CON           equ	16	;# 
   164     0011                     TMR2            equ	17	;# 
   165     0012                     T2CON           equ	18	;# 
   166     0013                     SSPBUF          equ	19	;# 
   167     0014                     SSPCON          equ	20	;# 
   168     0015                     CCPR1           equ	21	;# 
   169     0015                     CCPR1L          equ	21	;# 
   170     0016                     CCPR1H          equ	22	;# 
   171     0017                     CCP1CON         equ	23	;# 
   172     0018                     RCSTA           equ	24	;# 
   173     0019                     TXREG           equ	25	;# 
   174     001A                     RCREG           equ	26	;# 
   175     001B                     CCPR2           equ	27	;# 
   176     001B                     CCPR2L          equ	27	;# 
   177     001C                     CCPR2H          equ	28	;# 
   178     001D                     CCP2CON         equ	29	;# 
   179     001E                     ADRESH          equ	30	;# 
   180     001F                     ADCON0          equ	31	;# 
   181     0081                     OPTION_REG      equ	129	;# 
   182     0085                     TRISA           equ	133	;# 
   183     0086                     TRISB           equ	134	;# 
   184     0087                     TRISC           equ	135	;# 
   185     0088                     TRISD           equ	136	;# 
   186     0089                     TRISE           equ	137	;# 
   187     008C                     PIE1            equ	140	;# 
   188     008D                     PIE2            equ	141	;# 
   189     008E                     PCON            equ	142	;# 
   190     008F                     OSCCON          equ	143	;# 
   191     0090                     OSCTUNE         equ	144	;# 
   192     0091                     SSPCON2         equ	145	;# 
   193     0092                     PR2             equ	146	;# 
   194     0093                     SSPADD          equ	147	;# 
   195     0093                     SSPMSK          equ	147	;# 
   196     0093                     MSK             equ	147	;# 
   197     0094                     SSPSTAT         equ	148	;# 
   198     0095                     WPUB            equ	149	;# 
   199     0096                     IOCB            equ	150	;# 
   200     0097                     VRCON           equ	151	;# 
   201     0098                     TXSTA           equ	152	;# 
   202     0099                     SPBRG           equ	153	;# 
   203     009A                     SPBRGH          equ	154	;# 
   204     009B                     PWM1CON         equ	155	;# 
   205     009C                     ECCPAS          equ	156	;# 
   206     009D                     PSTRCON         equ	157	;# 
   207     009E                     ADRESL          equ	158	;# 
   208     009F                     ADCON1          equ	159	;# 
   209     0105                     WDTCON          equ	261	;# 
   210     0107                     CM1CON0         equ	263	;# 
   211     0108                     CM2CON0         equ	264	;# 
   212     0109                     CM2CON1         equ	265	;# 
   213     010C                     EEDATA          equ	268	;# 
   214     010C                     EEDAT           equ	268	;# 
   215     010D                     EEADR           equ	269	;# 
   216     010E                     EEDATH          equ	270	;# 
   217     010F                     EEADRH          equ	271	;# 
   218     0185                     SRCON           equ	389	;# 
   219     0187                     BAUDCTL         equ	391	;# 
   220     0188                     ANSEL           equ	392	;# 
   221     0189                     ANSELH          equ	393	;# 
   222     018C                     EECON1          equ	396	;# 
   223     018D                     EECON2          equ	397	;# 
   224     0000                     INDF            equ	0	;# 
   225     0001                     TMR0            equ	1	;# 
   226     0002                     PCL             equ	2	;# 
   227     0003                     STATUS          equ	3	;# 
   228     0004                     FSR             equ	4	;# 
   229     0005                     PORTA           equ	5	;# 
   230     0006                     PORTB           equ	6	;# 
   231     0007                     PORTC           equ	7	;# 
   232     0008                     PORTD           equ	8	;# 
   233     0009                     PORTE           equ	9	;# 
   234     000A                     PCLATH          equ	10	;# 
   235     000B                     INTCON          equ	11	;# 
   236     000C                     PIR1            equ	12	;# 
   237     000D                     PIR2            equ	13	;# 
   238     000E                     TMR1            equ	14	;# 
   239     000E                     TMR1L           equ	14	;# 
   240     000F                     TMR1H           equ	15	;# 
   241     0010                     T1CON           equ	16	;# 
   242     0011                     TMR2            equ	17	;# 
   243     0012                     T2CON           equ	18	;# 
   244     0013                     SSPBUF          equ	19	;# 
   245     0014                     SSPCON          equ	20	;# 
   246     0015                     CCPR1           equ	21	;# 
   247     0015                     CCPR1L          equ	21	;# 
   248     0016                     CCPR1H          equ	22	;# 
   249     0017                     CCP1CON         equ	23	;# 
   250     0018                     RCSTA           equ	24	;# 
   251     0019                     TXREG           equ	25	;# 
   252     001A                     RCREG           equ	26	;# 
   253     001B                     CCPR2           equ	27	;# 
   254     001B                     CCPR2L          equ	27	;# 
   255     001C                     CCPR2H          equ	28	;# 
   256     001D                     CCP2CON         equ	29	;# 
   257     001E                     ADRESH          equ	30	;# 
   258     001F                     ADCON0          equ	31	;# 
   259     0081                     OPTION_REG      equ	129	;# 
   260     0085                     TRISA           equ	133	;# 
   261     0086                     TRISB           equ	134	;# 
   262     0087                     TRISC           equ	135	;# 
   263     0088                     TRISD           equ	136	;# 
   264     0089                     TRISE           equ	137	;# 
   265     008C                     PIE1            equ	140	;# 
   266     008D                     PIE2            equ	141	;# 
   267     008E                     PCON            equ	142	;# 
   268     008F                     OSCCON          equ	143	;# 
   269     0090                     OSCTUNE         equ	144	;# 
   270     0091                     SSPCON2         equ	145	;# 
   271     0092                     PR2             equ	146	;# 
   272     0093                     SSPADD          equ	147	;# 
   273     0093                     SSPMSK          equ	147	;# 
   274     0093                     MSK             equ	147	;# 
   275     0094                     SSPSTAT         equ	148	;# 
   276     0095                     WPUB            equ	149	;# 
   277     0096                     IOCB            equ	150	;# 
   278     0097                     VRCON           equ	151	;# 
   279     0098                     TXSTA           equ	152	;# 
   280     0099                     SPBRG           equ	153	;# 
   281     009A                     SPBRGH          equ	154	;# 
   282     009B                     PWM1CON         equ	155	;# 
   283     009C                     ECCPAS          equ	156	;# 
   284     009D                     PSTRCON         equ	157	;# 
   285     009E                     ADRESL          equ	158	;# 
   286     009F                     ADCON1          equ	159	;# 
   287     0105                     WDTCON          equ	261	;# 
   288     0107                     CM1CON0         equ	263	;# 
   289     0108                     CM2CON0         equ	264	;# 
   290     0109                     CM2CON1         equ	265	;# 
   291     010C                     EEDATA          equ	268	;# 
   292     010C                     EEDAT           equ	268	;# 
   293     010D                     EEADR           equ	269	;# 
   294     010E                     EEDATH          equ	270	;# 
   295     010F                     EEADRH          equ	271	;# 
   296     0185                     SRCON           equ	389	;# 
   297     0187                     BAUDCTL         equ	391	;# 
   298     0188                     ANSEL           equ	392	;# 
   299     0189                     ANSELH          equ	393	;# 
   300     018C                     EECON1          equ	396	;# 
   301     018D                     EECON2          equ	397	;# 
   302     0000                     INDF            equ	0	;# 
   303     0001                     TMR0            equ	1	;# 
   304     0002                     PCL             equ	2	;# 
   305     0003                     STATUS          equ	3	;# 
   306     0004                     FSR             equ	4	;# 
   307     0005                     PORTA           equ	5	;# 
   308     0006                     PORTB           equ	6	;# 
   309     0007                     PORTC           equ	7	;# 
   310     0008                     PORTD           equ	8	;# 
   311     0009                     PORTE           equ	9	;# 
   312     000A                     PCLATH          equ	10	;# 
   313     000B                     INTCON          equ	11	;# 
   314     000C                     PIR1            equ	12	;# 
   315     000D                     PIR2            equ	13	;# 
   316     000E                     TMR1            equ	14	;# 
   317     000E                     TMR1L           equ	14	;# 
   318     000F                     TMR1H           equ	15	;# 
   319     0010                     T1CON           equ	16	;# 
   320     0011                     TMR2            equ	17	;# 
   321     0012                     T2CON           equ	18	;# 
   322     0013                     SSPBUF          equ	19	;# 
   323     0014                     SSPCON          equ	20	;# 
   324     0015                     CCPR1           equ	21	;# 
   325     0015                     CCPR1L          equ	21	;# 
   326     0016                     CCPR1H          equ	22	;# 
   327     0017                     CCP1CON         equ	23	;# 
   328     0018                     RCSTA           equ	24	;# 
   329     0019                     TXREG           equ	25	;# 
   330     001A                     RCREG           equ	26	;# 
   331     001B                     CCPR2           equ	27	;# 
   332     001B                     CCPR2L          equ	27	;# 
   333     001C                     CCPR2H          equ	28	;# 
   334     001D                     CCP2CON         equ	29	;# 
   335     001E                     ADRESH          equ	30	;# 
   336     001F                     ADCON0          equ	31	;# 
   337     0081                     OPTION_REG      equ	129	;# 
   338     0085                     TRISA           equ	133	;# 
   339     0086                     TRISB           equ	134	;# 
   340     0087                     TRISC           equ	135	;# 
   341     0088                     TRISD           equ	136	;# 
   342     0089                     TRISE           equ	137	;# 
   343     008C                     PIE1            equ	140	;# 
   344     008D                     PIE2            equ	141	;# 
   345     008E                     PCON            equ	142	;# 
   346     008F                     OSCCON          equ	143	;# 
   347     0090                     OSCTUNE         equ	144	;# 
   348     0091                     SSPCON2         equ	145	;# 
   349     0092                     PR2             equ	146	;# 
   350     0093                     SSPADD          equ	147	;# 
   351     0093                     SSPMSK          equ	147	;# 
   352     0093                     MSK             equ	147	;# 
   353     0094                     SSPSTAT         equ	148	;# 
   354     0095                     WPUB            equ	149	;# 
   355     0096                     IOCB            equ	150	;# 
   356     0097                     VRCON           equ	151	;# 
   357     0098                     TXSTA           equ	152	;# 
   358     0099                     SPBRG           equ	153	;# 
   359     009A                     SPBRGH          equ	154	;# 
   360     009B                     PWM1CON         equ	155	;# 
   361     009C                     ECCPAS          equ	156	;# 
   362     009D                     PSTRCON         equ	157	;# 
   363     009E                     ADRESL          equ	158	;# 
   364     009F                     ADCON1          equ	159	;# 
   365     0105                     WDTCON          equ	261	;# 
   366     0107                     CM1CON0         equ	263	;# 
   367     0108                     CM2CON0         equ	264	;# 
   368     0109                     CM2CON1         equ	265	;# 
   369     010C                     EEDATA          equ	268	;# 
   370     010C                     EEDAT           equ	268	;# 
   371     010D                     EEADR           equ	269	;# 
   372     010E                     EEDATH          equ	270	;# 
   373     010F                     EEADRH          equ	271	;# 
   374     0185                     SRCON           equ	389	;# 
   375     0187                     BAUDCTL         equ	391	;# 
   376     0188                     ANSEL           equ	392	;# 
   377     0189                     ANSELH          equ	393	;# 
   378     018C                     EECON1          equ	396	;# 
   379     018D                     EECON2          equ	397	;# 
   380                           
   381                           	psect	idataBANK0
   382     040B                     __pidataBANK0:
   383                           
   384                           ;initializer for _customChars
   385     040B  3400               	retlw	0
   386     040C  340E               	retlw	14
   387     040D  340A               	retlw	10
   388     040E  340A               	retlw	10
   389     040F  341F               	retlw	31
   390     0410  341F               	retlw	31
   391     0411  341F               	retlw	31
   392     0412  3400               	retlw	0
   393     0413  3400               	retlw	0
   394     0414  3401               	retlw	1
   395     0415  3403               	retlw	3
   396     0416  3416               	retlw	22
   397     0417  341C               	retlw	28
   398     0418  3408               	retlw	8
   399     0419  3400               	retlw	0
   400     041A  3400               	retlw	0
   401     041B  3400               	retlw	0
   402     041C  3411               	retlw	17
   403     041D  340A               	retlw	10
   404     041E  3404               	retlw	4
   405     041F  3404               	retlw	4
   406     0420  340A               	retlw	10
   407     0421  3411               	retlw	17
   408     0422  3400               	retlw	0
   409                           
   410                           ;initializer for keypad_getkey@F1398
   411     0423  3431               	retlw	49
   412     0424  3432               	retlw	50
   413     0425  3433               	retlw	51
   414     0426  3441               	retlw	65
   415     0427  3434               	retlw	52
   416     0428  3435               	retlw	53
   417     0429  3436               	retlw	54
   418     042A  3442               	retlw	66
   419     042B  3437               	retlw	55
   420     042C  3438               	retlw	56
   421     042D  3439               	retlw	57
   422     042E  3443               	retlw	67
   423     042F  342A               	retlw	42
   424     0430  3430               	retlw	48
   425     0431  3423               	retlw	35
   426     0432  3444               	retlw	68
   427                           
   428                           	psect	strings
   429     0003                     __pstrings:
   430     0003                     stringtab:
   431     0003                     __stringtab:
   432     0003                     stringcode:	
   433                           ;	String table - string pointers are 1 byte each
   434                           
   435     0003                     stringdir:
   436     0003  3000               	movlw	high stringdir
   437     0004  008A               	movwf	10
   438     0005  0804               	movf	4,w
   439     0006  0A84               	incf	4,f
   440     0007  0782               	addwf	2,f
   441     0008                     __stringbase:
   442     0008  3400               	retlw	0
   443     0009                     __end_of__stringtab:
   444     0009                     _password:
   445     0009  3432               	retlw	50
   446     000A  3430               	retlw	48
   447     000B  3432               	retlw	50
   448     000C  3431               	retlw	49
   449     000D  3431               	retlw	49
   450     000E  3400               	retlw	0
   451     000F                     __end_of_password:
   452     0008                     _PORTDbits      set	8
   453     0008                     _PORTD          set	8
   454     0006                     _PORTB          set	6
   455     0007                     _PORTCbits      set	7
   456     0007                     _PORTC          set	7
   457     0088                     _TRISD          set	136
   458     008F                     _OSCCON         set	143
   459     0081                     _OPTION_REGbits set	129
   460     0086                     _TRISB          set	134
   461     0087                     _TRISC          set	135
   462     0189                     _ANSELH         set	393
   463     000F                     STR_4:
   464     000F  3453               	retlw	83	;'S'
   465     0010  3469               	retlw	105	;'i'
   466     0011  3473               	retlw	115	;'s'
   467     0012  3474               	retlw	116	;'t'
   468     0013  3465               	retlw	101	;'e'
   469     0014  346D               	retlw	109	;'m'
   470     0015  3461               	retlw	97	;'a'
   471     0016  3420               	retlw	32	;' '
   472     0017  3442               	retlw	66	;'B'
   473     0018  346C               	retlw	108	;'l'
   474     0019  346F               	retlw	111	;'o'
   475     001A  3471               	retlw	113	;'q'
   476     001B  3475               	retlw	117	;'u'
   477     001C  3465               	retlw	101	;'e'
   478     001D  3461               	retlw	97	;'a'
   479     001E  3464               	retlw	100	;'d'
   480     001F  346F               	retlw	111	;'o'
   481     0020  3400               	retlw	0
   482     0021                     STR_3:
   483     0021  3443               	retlw	67	;'C'
   484     0022  346C               	retlw	108	;'l'
   485     0023  3461               	retlw	97	;'a'
   486     0024  3476               	retlw	118	;'v'
   487     0025  3465               	retlw	101	;'e'
   488     0026  3420               	retlw	32	;' '
   489     0027  3449               	retlw	73	;'I'
   490     0028  346E               	retlw	110	;'n'
   491     0029  3463               	retlw	99	;'c'
   492     002A  346F               	retlw	111	;'o'
   493     002B  3472               	retlw	114	;'r'
   494     002C  3472               	retlw	114	;'r'
   495     002D  3465               	retlw	101	;'e'
   496     002E  3463               	retlw	99	;'c'
   497     002F  3474               	retlw	116	;'t'
   498     0030  3461               	retlw	97	;'a'
   499     0031  3400               	retlw	0
   500     0032                     STR_2:
   501     0032  3443               	retlw	67	;'C'
   502     0033  346C               	retlw	108	;'l'
   503     0034  3461               	retlw	97	;'a'
   504     0035  3476               	retlw	118	;'v'
   505     0036  3465               	retlw	101	;'e'
   506     0037  3420               	retlw	32	;' '
   507     0038  3443               	retlw	67	;'C'
   508     0039  346F               	retlw	111	;'o'
   509     003A  3472               	retlw	114	;'r'
   510     003B  3472               	retlw	114	;'r'
   511     003C  3465               	retlw	101	;'e'
   512     003D  3463               	retlw	99	;'c'
   513     003E  3474               	retlw	116	;'t'
   514     003F  3461               	retlw	97	;'a'
   515     0040  3400               	retlw	0
   516     0041                     STR_1:
   517     0041  3449               	retlw	73	;'I'
   518     0042  346E               	retlw	110	;'n'
   519     0043  3467               	retlw	103	;'g'
   520     0044  3472               	retlw	114	;'r'
   521     0045  3465               	retlw	101	;'e'
   522     0046  3473               	retlw	115	;'s'
   523     0047  3465               	retlw	101	;'e'
   524     0048  3420               	retlw	32	;' '
   525     0049  346B               	retlw	107	;'k'
   526     004A  3465               	retlw	101	;'e'
   527     004B  3479               	retlw	121	;'y'
   528     004C  343A               	retlw	58	;':'
   529     004D  3400               	retlw	0
   530                           
   531                           	psect	cinit
   532     07E5                     start_initialization:	
   533                           ; #config settings
   534                           
   535     07E5                     __initialization:
   536                           
   537                           ; Initialize objects allocated to BANK0
   538     07E5  1383               	bcf	3,7	;select IRP bank0
   539     07E6  3048               	movlw	low (__pdataBANK0+40)
   540     07E7  00FD               	movwf	btemp+-1
   541     07E8  3004               	movlw	high __pidataBANK0
   542     07E9  00FE               	movwf	btemp
   543     07EA  300B               	movlw	low __pidataBANK0
   544     07EB  00FF               	movwf	btemp+1
   545     07EC  3020               	movlw	low __pdataBANK0
   546     07ED  0084               	movwf	4
   547     07EE  120A  118A  23BC  120A  118A  	fcall	init_ram0
   548                           
   549                           ; Clear objects allocated to BANK0
   550     07F3  01E2               	clrf	__pbssBANK0& (0+127)
   551     07F4  01E3               	clrf	(__pbssBANK0+1)& (0+127)
   552     07F5  01E4               	clrf	(__pbssBANK0+2)& (0+127)
   553     07F6  01E5               	clrf	(__pbssBANK0+3)& (0+127)
   554     07F7  01E6               	clrf	(__pbssBANK0+4)& (0+127)
   555     07F8  01E7               	clrf	(__pbssBANK0+5)& (0+127)
   556     07F9  01E8               	clrf	(__pbssBANK0+6)& (0+127)
   557     07FA  01E9               	clrf	(__pbssBANK0+7)& (0+127)
   558     07FB  01EA               	clrf	(__pbssBANK0+8)& (0+127)
   559     07FC                     end_of_initialization:	
   560                           ;End of C runtime variable initialization code
   561                           
   562     07FC                     __end_of__initialization:
   563     07FC  0183               	clrf	3
   564     07FD  120A  118A  2E3C   	ljmp	_main	;jump to C main() function
   565                           
   566                           	psect	bssBANK0
   567     0062                     __pbssBANK0:
   568     0062                     _intentos:
   569     0062                     	ds	2
   570     0064                     _idx:
   571     0064                     	ds	1
   572     0065                     _pass_user:
   573     0065                     	ds	6
   574                           
   575                           	psect	dataBANK0
   576     0020                     __pdataBANK0:
   577     0020                     _customChars:
   578     0020                     	ds	24
   579     0038                     keypad_getkey@F1398:
   580     0038                     	ds	16
   581                           
   582                           	psect	inittext
   583     03B8                     init_fetch0:	
   584                           ;	Called with low address in FSR and high address in W
   585                           
   586     03B8  087E               	movf	btemp,w
   587     03B9  008A               	movwf	10
   588     03BA  087F               	movf	btemp+1,w
   589     03BB  0082               	movwf	2
   590     03BC                     init_ram0:	
   591                           ;Called with:
   592                           ;	high address of idata address in btemp 
   593                           ;	low address of idata address in btemp+1 
   594                           ;	low address of data in FSR
   595                           ;	high address + 1 of data in btemp-1
   596                           
   597     03BC  120A  118A  23B8  120A  118A  	fcall	init_fetch0
   598     03C1  0080               	movwf	0
   599     03C2  0A84               	incf	4,f
   600     03C3  0804               	movf	4,w
   601     03C4  067D               	xorwf	btemp+-1,w
   602     03C5  1903               	btfsc	3,2
   603     03C6  3400               	retlw	0
   604     03C7  0AFF               	incf	btemp+1,f
   605     03C8  1903               	btfsc	3,2
   606     03C9  0AFE               	incf	btemp,f
   607     03CA  2BBC               	goto	init_ram0
   608                           
   609                           	psect	cstackCOMMON
   610     0070                     __pcstackCOMMON:
   611     0070                     ?_LCD_Command:
   612     0070                     ?_LCD_Char:	
   613                           ; 1 bytes @ 0x0
   614                           
   615     0070                     ?_LCD_Init:	
   616                           ; 1 bytes @ 0x0
   617                           
   618     0070                     ?_LCD_Load_Custom_Chars:	
   619                           ; 1 bytes @ 0x0
   620                           
   621     0070                     ?_LCD_Clear:	
   622                           ; 1 bytes @ 0x0
   623                           
   624     0070                     ?_keypad_init:	
   625                           ; 1 bytes @ 0x0
   626                           
   627     0070                     ?_keypad_getkey:	
   628                           ; 1 bytes @ 0x0
   629                           
   630     0070                     ?_main:	
   631                           ; 1 bytes @ 0x0
   632                           
   633     0070                     ?_strncmp:	
   634                           ; 1 bytes @ 0x0
   635                           
   636     0070                     strncmp@l:	
   637                           ; 2 bytes @ 0x0
   638                           
   639     0070                     ??_LCD_Command:	
   640                           ; 1 bytes @ 0x0
   641                           
   642     0070                     ??_LCD_Char:	
   643                           ; 1 bytes @ 0x0
   644                           
   645     0070                     ??_keypad_init:	
   646                           ; 1 bytes @ 0x0
   647                           
   648     0070                     ??_keypad_getkey:	
   649                           ; 1 bytes @ 0x0
   650                           
   651                           
   652                           ; 1 bytes @ 0x0
   653     0070                     	ds	1
   654     0071                     strncmp@r:
   655                           
   656                           ; 1 bytes @ 0x1
   657     0071                     	ds	1
   658     0072                     LCD_Command@cmd:
   659     0072                     LCD_Char@dat:	
   660                           ; 1 bytes @ 0x2
   661                           
   662     0072                     strncmp@n:	
   663                           ; 1 bytes @ 0x2
   664                           
   665                           
   666                           ; 2 bytes @ 0x2
   667     0072                     	ds	1
   668     0073                     ?_LCD_String:
   669     0073                     LCD_String@msg:	
   670                           ; 1 bytes @ 0x3
   671                           
   672     0073                     ??_LCD_Init:	
   673                           ; 1 bytes @ 0x3
   674                           
   675     0073                     ??_LCD_Load_Custom_Chars:	
   676                           ; 1 bytes @ 0x3
   677                           
   678     0073                     ??_LCD_Clear:	
   679                           ; 1 bytes @ 0x3
   680                           
   681                           
   682                           ; 1 bytes @ 0x3
   683     0073                     	ds	1
   684     0074                     ?_LCD_String_xy:
   685     0074                     LCD_String_xy@pos:	
   686                           ; 1 bytes @ 0x4
   687                           
   688     0074                     ??_strncmp:	
   689                           ; 1 bytes @ 0x4
   690                           
   691     0074                     ??_LCD_String:	
   692                           ; 1 bytes @ 0x4
   693                           
   694                           
   695                           ; 1 bytes @ 0x4
   696     0074                     	ds	1
   697     0075                     LCD_String_xy@msg:
   698                           
   699                           ; 1 bytes @ 0x5
   700     0075                     	ds	1
   701     0076                     LCD_Load_Custom_Chars@j:
   702     0076                     LCD_String_xy@row:	
   703                           ; 1 bytes @ 0x6
   704                           
   705     0076                     ??_LCD_String_xy:	
   706                           ; 1 bytes @ 0x6
   707                           
   708                           
   709                           ; 1 bytes @ 0x6
   710     0076                     	ds	1
   711     0077                     LCD_Load_Custom_Chars@i:
   712     0077                     LCD_String_xy@location:	
   713                           ; 1 bytes @ 0x7
   714                           
   715                           
   716                           ; 1 bytes @ 0x7
   717     0077                     	ds	1
   718     0078                     ??_main:
   719                           
   720                           ; 1 bytes @ 0x8
   721     0078                     	ds	3
   722                           
   723                           	psect	cstackBANK0
   724     0048                     __pcstackBANK0:
   725     0048                     keypad_getkey@letras:
   726                           
   727                           ; 16 bytes @ 0x0
   728     0048                     	ds	16
   729     0058                     keypad_getkey@valor:
   730                           
   731                           ; 1 bytes @ 0x10
   732     0058                     	ds	1
   733     0059                     keypad_getkey@i:
   734                           
   735                           ; 2 bytes @ 0x11
   736     0059                     	ds	2
   737     005B                     main@i:
   738                           
   739                           ; 2 bytes @ 0x13
   740     005B                     	ds	2
   741     005D                     main@i_211:
   742                           
   743                           ; 2 bytes @ 0x15
   744     005D                     	ds	2
   745     005F                     main@i_213:
   746                           
   747                           ; 2 bytes @ 0x17
   748     005F                     	ds	2
   749     0061                     main@key:
   750                           
   751                           ; 1 bytes @ 0x19
   752     0061                     	ds	1
   753                           
   754                           	psect	maintext
   755     063C                     __pmaintext:	
   756 ;;
   757 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   758 ;;
   759 ;; *************** function _main *****************
   760 ;; Defined at:
   761 ;;		line 40 in file "main.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;  i               2   21[BANK0 ] int 
   766 ;;  i               2   19[BANK0 ] int 
   767 ;;  i               2   23[BANK0 ] int 
   768 ;;  key             1   25[BANK0 ] unsigned char 
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   773 ;; Tracked objects:
   774 ;;		On entry : B00/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   778 ;;      Params:         0       0       0       0       0
   779 ;;      Locals:         0       7       0       0       0
   780 ;;      Temps:          3       0       0       0       0
   781 ;;      Totals:         3       7       0       0       0
   782 ;;Total ram usage:       10 bytes
   783 ;; Hardware stack levels required when called: 3
   784 ;; This function calls:
   785 ;;		_LCD_Char
   786 ;;		_LCD_Clear
   787 ;;		_LCD_Command
   788 ;;		_LCD_Init
   789 ;;		_LCD_Load_Custom_Chars
   790 ;;		_LCD_String_xy
   791 ;;		_keypad_getkey
   792 ;;		_keypad_init
   793 ;;		_strncmp
   794 ;; This function is called by:
   795 ;;		Startup code after reset
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799     063C                     _main:	
   800                           ;psect for function _main
   801                           
   802     063C                     l1354:	
   803                           ;incstack = 0
   804                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   805                           
   806                           
   807                           ;main.c: 43:     OSCCON = 0x71;
   808     063C  3071               	movlw	113
   809     063D  1683               	bsf	3,5	;RP0=1, select bank1
   810     063E  1303               	bcf	3,6	;RP1=0, select bank1
   811     063F  008F               	movwf	15	;volatile
   812     0640                     l1356:
   813                           
   814                           ;main.c: 45:     TRISD = 0x00;
   815     0640  0188               	clrf	8	;volatile
   816                           
   817                           ;main.c: 46:     PORTD = 0x00;
   818     0641  1283               	bcf	3,5	;RP0=0, select bank0
   819     0642  1303               	bcf	3,6	;RP1=0, select bank0
   820     0643  0188               	clrf	8	;volatile
   821                           
   822                           ;main.c: 47:     TRISB = 0x00;
   823     0644  1683               	bsf	3,5	;RP0=1, select bank1
   824     0645  1303               	bcf	3,6	;RP1=0, select bank1
   825     0646  0186               	clrf	6	;volatile
   826                           
   827                           ;main.c: 48:     ANSELH = 0x00;
   828     0647  1683               	bsf	3,5	;RP0=1, select bank3
   829     0648  1703               	bsf	3,6	;RP1=1, select bank3
   830     0649  0189               	clrf	9	;volatile
   831     064A                     l1358:
   832                           
   833                           ;main.c: 50:     LCD_Init();
   834     064A  120A  118A  2433  120A  118A  	fcall	_LCD_Init
   835     064F                     l1360:
   836                           
   837                           ;main.c: 51:     LCD_Load_Custom_Chars();
   838     064F  120A  118A  24C9  120A  118A  	fcall	_LCD_Load_Custom_Chars
   839     0654                     l1362:
   840                           
   841                           ;main.c: 52:     keypad_init();
   842     0654  120A  118A  23A0  120A  118A  	fcall	_keypad_init
   843     0659                     l1364:
   844                           
   845                           ;main.c: 55:         if (intentos < 3) {
   846     0659  1283               	bcf	3,5	;RP0=0, select bank0
   847     065A  1303               	bcf	3,6	;RP1=0, select bank0
   848     065B  0863               	movf	_intentos+1,w
   849     065C  3A80               	xorlw	128
   850     065D  00FF               	movwf	btemp+1
   851     065E  3080               	movlw	128
   852     065F  027F               	subwf	btemp+1,w
   853     0660  1D03               	skipz
   854     0661  2E64               	goto	u855
   855     0662  3003               	movlw	3
   856     0663  0262               	subwf	_intentos,w
   857     0664                     u855:
   858     0664  1803               	skipnc
   859     0665  2E67               	goto	u851
   860     0666  2E68               	goto	u850
   861     0667                     u851:
   862     0667  2F87               	goto	l1438
   863     0668                     u850:
   864     0668                     l1366:
   865                           
   866                           ;main.c: 56:             LCD_Clear();
   867     0668  120A  118A  23A8  120A  118A  	fcall	_LCD_Clear
   868     066D                     l1368:
   869                           
   870                           ;main.c: 57:             LCD_String_xy(0, 0, "Ingrese key:");
   871     066D  01F4               	clrf	LCD_String_xy@pos
   872     066E  3039               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   873     066F  00F5               	movwf	LCD_String_xy@msg
   874     0670  3000               	movlw	0
   875     0671  120A  118A  23E7  120A  118A  	fcall	_LCD_String_xy
   876     0676                     l1370:
   877                           
   878                           ;main.c: 58:             LCD_Command(0xC0);
   879     0676  30C0               	movlw	192
   880     0677  120A  118A  245D  120A  118A  	fcall	_LCD_Command
   881     067C                     l1372:
   882                           
   883                           ;main.c: 61:             idx = 0;
   884     067C  1283               	bcf	3,5	;RP0=0, select bank0
   885     067D  1303               	bcf	3,6	;RP1=0, select bank0
   886     067E  01E4               	clrf	_idx
   887     067F                     l1374:
   888                           
   889                           ;main.c: 64:                 key = keypad_getkey();
   890     067F  120A  118A  255B  120A  118A  	fcall	_keypad_getkey
   891     0684  1283               	bcf	3,5	;RP0=0, select bank0
   892     0685  1303               	bcf	3,6	;RP1=0, select bank0
   893     0686  00E1               	movwf	main@key
   894     0687                     l1376:
   895                           
   896                           ;main.c: 65:                 if (key != 0) {
   897     0687  0861               	movf	main@key,w
   898     0688  1903               	btfsc	3,2
   899     0689  2E8B               	goto	u861
   900     068A  2E8C               	goto	u860
   901     068B                     u861:
   902     068B  2E9C               	goto	l1384
   903     068C                     u860:
   904     068C                     l1378:
   905                           
   906                           ;main.c: 66:                     LCD_Char('*');
   907     068C  302A               	movlw	42
   908     068D  120A  118A  2493  120A  118A  	fcall	_LCD_Char
   909     0692                     l1380:
   910                           
   911                           ;main.c: 67:                     pass_user[idx++] = key;
   912     0692  1283               	bcf	3,5	;RP0=0, select bank0
   913     0693  1303               	bcf	3,6	;RP1=0, select bank0
   914     0694  0864               	movf	_idx,w
   915     0695  3E65               	addlw	(low (_pass_user| 0))& (0+255)
   916     0696  0084               	movwf	4
   917     0697  0861               	movf	main@key,w
   918     0698  1383               	bcf	3,7	;select IRP bank0
   919     0699  0080               	movwf	0
   920     069A                     l1382:
   921     069A  3001               	movlw	1
   922     069B  07E4               	addwf	_idx,f
   923     069C                     l1384:
   924                           
   925                           ;main.c: 69:                 _delay((unsigned long)((200)*(8000000/4000.0)));
   926     069C  3003               	movlw	3
   927     069D  00FA               	movwf	??_main+2
   928     069E  3008               	movlw	8
   929     069F  00F9               	movwf	??_main+1
   930     06A0  3077               	movlw	119
   931     06A1  00F8               	movwf	??_main
   932     06A2                     u937:
   933     06A2  0BF8               	decfsz	??_main,f
   934     06A3  2EA2               	goto	u937
   935     06A4  0BF9               	decfsz	??_main+1,f
   936     06A5  2EA2               	goto	u937
   937     06A6  0BFA               	decfsz	??_main+2,f
   938     06A7  2EA2               	goto	u937
   939     06A8                     l1386:
   940                           
   941                           ;main.c: 70:             } while (idx < 8 && key != '#');
   942     06A8  3008               	movlw	8
   943     06A9  1283               	bcf	3,5	;RP0=0, select bank0
   944     06AA  1303               	bcf	3,6	;RP1=0, select bank0
   945     06AB  0264               	subwf	_idx,w
   946     06AC  1803               	skipnc
   947     06AD  2EAF               	goto	u871
   948     06AE  2EB0               	goto	u870
   949     06AF                     u871:
   950     06AF  2EB6               	goto	l1390
   951     06B0                     u870:
   952     06B0                     l1388:
   953     06B0  3023               	movlw	35
   954     06B1  0661               	xorwf	main@key,w
   955     06B2  1D03               	btfss	3,2
   956     06B3  2EB5               	goto	u881
   957     06B4  2EB6               	goto	u880
   958     06B5                     u881:
   959     06B5  2E7F               	goto	l1374
   960     06B6                     u880:
   961     06B6                     l1390:
   962                           
   963                           ;main.c: 72:             pass_user[idx] = 0;
   964     06B6  0864               	movf	_idx,w
   965     06B7  3E65               	addlw	(low (_pass_user| 0))& (0+255)
   966     06B8  0084               	movwf	4
   967     06B9  1383               	bcf	3,7	;select IRP bank0
   968     06BA  0180               	clrf	0
   969     06BB                     l1392:
   970                           
   971                           ;main.c: 76:             if (strncmp(pass_user, password, 5) == 0) {
   972     06BB  3065               	movlw	(low (_pass_user| 0))& (0+255)
   973     06BC  00F0               	movwf	strncmp@l
   974     06BD  3001               	movlw	(low ((_password-__stringbase)| (0+32768)))& (0+255)
   975     06BE  00F1               	movwf	strncmp@r
   976     06BF  3005               	movlw	5
   977     06C0  00F2               	movwf	strncmp@n
   978     06C1  3000               	movlw	0
   979     06C2  00F3               	movwf	strncmp@n+1
   980     06C3  120A  118A  2503  120A  118A  	fcall	_strncmp
   981     06C8  0870               	movf	?_strncmp,w
   982     06C9  0471               	iorwf	?_strncmp+1,w
   983     06CA  1D03               	btfss	3,2
   984     06CB  2ECD               	goto	u891
   985     06CC  2ECE               	goto	u890
   986     06CD                     u891:
   987     06CD  2F20               	goto	l1414
   988     06CE                     u890:
   989     06CE                     l1394:
   990                           
   991                           ;main.c: 78:                 LCD_Clear();
   992     06CE  120A  118A  23A8  120A  118A  	fcall	_LCD_Clear
   993     06D3                     l1396:
   994                           
   995                           ;main.c: 79:                 LCD_String_xy(0, 0, "Clave Correcta");
   996     06D3  01F4               	clrf	LCD_String_xy@pos
   997     06D4  302A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   998     06D5  00F5               	movwf	LCD_String_xy@msg
   999     06D6  3000               	movlw	0
  1000     06D7  120A  118A  23E7  120A  118A  	fcall	_LCD_String_xy
  1001     06DC                     l1398:
  1002                           
  1003                           ;main.c: 80:                 LCD_Char(1);
  1004     06DC  3001               	movlw	1
  1005     06DD  120A  118A  2493  120A  118A  	fcall	_LCD_Char
  1006     06E2                     l1400:
  1007                           
  1008                           ;main.c: 81:                 for (int i = 0; i < 6; i++) {
  1009     06E2  1283               	bcf	3,5	;RP0=0, select bank0
  1010     06E3  1303               	bcf	3,6	;RP1=0, select bank0
  1011     06E4  01DB               	clrf	main@i
  1012     06E5  01DC               	clrf	main@i+1
  1013     06E6                     l175:
  1014                           
  1015                           ;main.c: 82:                     PORTDbits.RD0 = 1;
  1016     06E6  1283               	bcf	3,5	;RP0=0, select bank0
  1017     06E7  1303               	bcf	3,6	;RP1=0, select bank0
  1018     06E8  1408               	bsf	8,0	;volatile
  1019     06E9                     l1406:
  1020                           
  1021                           ;main.c: 83:                     _delay((unsigned long)((500)*(8000000/4000.0)));
  1022     06E9  3006               	movlw	6
  1023     06EA  00FA               	movwf	??_main+2
  1024     06EB  3013               	movlw	19
  1025     06EC  00F9               	movwf	??_main+1
  1026     06ED  30AD               	movlw	173
  1027     06EE  00F8               	movwf	??_main
  1028     06EF                     u947:
  1029     06EF  0BF8               	decfsz	??_main,f
  1030     06F0  2EEF               	goto	u947
  1031     06F1  0BF9               	decfsz	??_main+1,f
  1032     06F2  2EEF               	goto	u947
  1033     06F3  0BFA               	decfsz	??_main+2,f
  1034     06F4  2EEF               	goto	u947
  1035     06F5  2EF6               	nop2
  1036     06F6                     l1408:
  1037                           
  1038                           ;main.c: 84:                     PORTDbits.RD0 = 0;
  1039     06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1040     06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1041     06F8  1008               	bcf	8,0	;volatile
  1042                           
  1043                           ;main.c: 85:                     _delay((unsigned long)((500)*(8000000/4000.0)));
  1044     06F9  3006               	movlw	6
  1045     06FA  00FA               	movwf	??_main+2
  1046     06FB  3013               	movlw	19
  1047     06FC  00F9               	movwf	??_main+1
  1048     06FD  30AD               	movlw	173
  1049     06FE  00F8               	movwf	??_main
  1050     06FF                     u957:
  1051     06FF  0BF8               	decfsz	??_main,f
  1052     0700  2EFF               	goto	u957
  1053     0701  0BF9               	decfsz	??_main+1,f
  1054     0702  2EFF               	goto	u957
  1055     0703  0BFA               	decfsz	??_main+2,f
  1056     0704  2EFF               	goto	u957
  1057     0705  2F06               	nop2
  1058                           
  1059                           ;main.c: 86:                 }
  1060     0706  3001               	movlw	1
  1061     0707  1283               	bcf	3,5	;RP0=0, select bank0
  1062     0708  1303               	bcf	3,6	;RP1=0, select bank0
  1063     0709  07DB               	addwf	main@i,f
  1064     070A  1803               	skipnc
  1065     070B  0ADC               	incf	main@i+1,f
  1066     070C  3000               	movlw	0
  1067     070D  07DC               	addwf	main@i+1,f
  1068     070E                     l1410:
  1069     070E  085C               	movf	main@i+1,w
  1070     070F  3A80               	xorlw	128
  1071     0710  00FF               	movwf	btemp+1
  1072     0711  3080               	movlw	128
  1073     0712  027F               	subwf	btemp+1,w
  1074     0713  1D03               	skipz
  1075     0714  2F17               	goto	u905
  1076     0715  3006               	movlw	6
  1077     0716  025B               	subwf	main@i,w
  1078     0717                     u905:
  1079     0717  1C03               	skipc
  1080     0718  2F1A               	goto	u901
  1081     0719  2F1B               	goto	u900
  1082     071A                     u901:
  1083     071A  2EE6               	goto	l175
  1084     071B                     u900:
  1085     071B                     l1412:
  1086                           
  1087                           ;main.c: 87:                 intentos = 0;
  1088     071B  1283               	bcf	3,5	;RP0=0, select bank0
  1089     071C  1303               	bcf	3,6	;RP1=0, select bank0
  1090     071D  01E2               	clrf	_intentos
  1091     071E  01E3               	clrf	_intentos+1
  1092                           
  1093                           ;main.c: 88:             } else {
  1094     071F  2F81               	goto	l1436
  1095     0720                     l1414:
  1096                           
  1097                           ;main.c: 90:                 intentos++;
  1098     0720  3001               	movlw	1
  1099     0721  1283               	bcf	3,5	;RP0=0, select bank0
  1100     0722  1303               	bcf	3,6	;RP1=0, select bank0
  1101     0723  07E2               	addwf	_intentos,f
  1102     0724  1803               	skipnc
  1103     0725  0AE3               	incf	_intentos+1,f
  1104     0726  3000               	movlw	0
  1105     0727  07E3               	addwf	_intentos+1,f
  1106     0728                     l1416:
  1107                           
  1108                           ;main.c: 91:                 LCD_Clear();
  1109     0728  120A  118A  23A8  120A  118A  	fcall	_LCD_Clear
  1110     072D                     l1418:
  1111                           
  1112                           ;main.c: 92:                 LCD_String_xy(0, 0, "Clave Incorrecta");
  1113     072D  01F4               	clrf	LCD_String_xy@pos
  1114     072E  3019               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1115     072F  00F5               	movwf	LCD_String_xy@msg
  1116     0730  3000               	movlw	0
  1117     0731  120A  118A  23E7  120A  118A  	fcall	_LCD_String_xy
  1118     0736                     l1420:
  1119                           
  1120                           ;main.c: 93:                 LCD_Char(2);
  1121     0736  3002               	movlw	2
  1122     0737  120A  118A  2493  120A  118A  	fcall	_LCD_Char
  1123     073C                     l1422:
  1124                           
  1125                           ;main.c: 94:                 for (int i = 0; i < 3; i++) {
  1126     073C  1283               	bcf	3,5	;RP0=0, select bank0
  1127     073D  1303               	bcf	3,6	;RP1=0, select bank0
  1128     073E  01DD               	clrf	main@i_211
  1129     073F  01DE               	clrf	main@i_211+1
  1130     0740                     l178:
  1131                           
  1132                           ;main.c: 95:                     PORTDbits.RD1 = 1;
  1133     0740  1283               	bcf	3,5	;RP0=0, select bank0
  1134     0741  1303               	bcf	3,6	;RP1=0, select bank0
  1135     0742  1488               	bsf	8,1	;volatile
  1136     0743                     l1428:
  1137                           
  1138                           ;main.c: 96:                     _delay((unsigned long)((300)*(8000000/4000.0)));
  1139     0743  3004               	movlw	4
  1140     0744  00FA               	movwf	??_main+2
  1141     0745  300C               	movlw	12
  1142     0746  00F9               	movwf	??_main+1
  1143     0747  3033               	movlw	51
  1144     0748  00F8               	movwf	??_main
  1145     0749                     u967:
  1146     0749  0BF8               	decfsz	??_main,f
  1147     074A  2F49               	goto	u967
  1148     074B  0BF9               	decfsz	??_main+1,f
  1149     074C  2F49               	goto	u967
  1150     074D  0BFA               	decfsz	??_main+2,f
  1151     074E  2F49               	goto	u967
  1152     074F  2F50               	nop2
  1153     0750                     l1430:
  1154                           
  1155                           ;main.c: 97:                     PORTDbits.RD1 = 0;
  1156     0750  1283               	bcf	3,5	;RP0=0, select bank0
  1157     0751  1303               	bcf	3,6	;RP1=0, select bank0
  1158     0752  1088               	bcf	8,1	;volatile
  1159                           
  1160                           ;main.c: 98:                     _delay((unsigned long)((700)*(8000000/4000.0)));
  1161     0753  3008               	movlw	8
  1162     0754  00FA               	movwf	??_main+2
  1163     0755  301B               	movlw	27
  1164     0756  00F9               	movwf	??_main+1
  1165     0757  3027               	movlw	39
  1166     0758  00F8               	movwf	??_main
  1167     0759                     u977:
  1168     0759  0BF8               	decfsz	??_main,f
  1169     075A  2F59               	goto	u977
  1170     075B  0BF9               	decfsz	??_main+1,f
  1171     075C  2F59               	goto	u977
  1172     075D  0BFA               	decfsz	??_main+2,f
  1173     075E  2F59               	goto	u977
  1174                           
  1175                           ;main.c: 99:                 }
  1176     075F  3001               	movlw	1
  1177     0760  1283               	bcf	3,5	;RP0=0, select bank0
  1178     0761  1303               	bcf	3,6	;RP1=0, select bank0
  1179     0762  07DD               	addwf	main@i_211,f
  1180     0763  1803               	skipnc
  1181     0764  0ADE               	incf	main@i_211+1,f
  1182     0765  3000               	movlw	0
  1183     0766  07DE               	addwf	main@i_211+1,f
  1184     0767                     l1432:
  1185     0767  085E               	movf	main@i_211+1,w
  1186     0768  3A80               	xorlw	128
  1187     0769  00FF               	movwf	btemp+1
  1188     076A  3080               	movlw	128
  1189     076B  027F               	subwf	btemp+1,w
  1190     076C  1D03               	skipz
  1191     076D  2F70               	goto	u915
  1192     076E  3003               	movlw	3
  1193     076F  025D               	subwf	main@i_211,w
  1194     0770                     u915:
  1195     0770  1C03               	skipc
  1196     0771  2F73               	goto	u911
  1197     0772  2F74               	goto	u910
  1198     0773                     u911:
  1199     0773  2F40               	goto	l178
  1200     0774                     u910:
  1201     0774                     l1434:
  1202                           
  1203                           ;main.c: 100:                 _delay((unsigned long)((2000)*(8000000/4000.0)));
  1204     0774  3015               	movlw	21
  1205     0775  00FA               	movwf	??_main+2
  1206     0776  304B               	movlw	75
  1207     0777  00F9               	movwf	??_main+1
  1208     0778  30BE               	movlw	190
  1209     0779  00F8               	movwf	??_main
  1210     077A                     u987:
  1211     077A  0BF8               	decfsz	??_main,f
  1212     077B  2F7A               	goto	u987
  1213     077C  0BF9               	decfsz	??_main+1,f
  1214     077D  2F7A               	goto	u987
  1215     077E  0BFA               	decfsz	??_main+2,f
  1216     077F  2F7A               	goto	u987
  1217     0780  0000               	nop
  1218     0781                     l1436:
  1219                           
  1220                           ;main.c: 104:             LCD_Clear();
  1221     0781  120A  118A  23A8  120A  118A  	fcall	_LCD_Clear
  1222                           
  1223                           ;main.c: 105:         } else {
  1224     0786  2E59               	goto	l1364
  1225     0787                     l1438:
  1226                           
  1227                           ;main.c: 107:             LCD_Clear();
  1228     0787  120A  118A  23A8  120A  118A  	fcall	_LCD_Clear
  1229     078C                     l1440:
  1230                           
  1231                           ;main.c: 108:             LCD_String_xy(0, 0, "Sistema Bloqueado");
  1232     078C  01F4               	clrf	LCD_String_xy@pos
  1233     078D  3007               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1234     078E  00F5               	movwf	LCD_String_xy@msg
  1235     078F  3000               	movlw	0
  1236     0790  120A  118A  23E7  120A  118A  	fcall	_LCD_String_xy
  1237     0795                     l1442:
  1238                           
  1239                           ;main.c: 109:             LCD_Char(0);
  1240     0795  3000               	movlw	0
  1241     0796  120A  118A  2493  120A  118A  	fcall	_LCD_Char
  1242     079B                     l1444:
  1243                           
  1244                           ;main.c: 110:             for (int i = 0; i < 10; i++) {
  1245     079B  1283               	bcf	3,5	;RP0=0, select bank0
  1246     079C  1303               	bcf	3,6	;RP1=0, select bank0
  1247     079D  01DF               	clrf	main@i_213
  1248     079E  01E0               	clrf	main@i_213+1
  1249     079F                     l181:
  1250                           
  1251                           ;main.c: 111:                 PORTDbits.RD2 = 1;
  1252     079F  1283               	bcf	3,5	;RP0=0, select bank0
  1253     07A0  1303               	bcf	3,6	;RP1=0, select bank0
  1254     07A1  1508               	bsf	8,2	;volatile
  1255     07A2                     l1450:
  1256                           
  1257                           ;main.c: 112:                 _delay((unsigned long)((300)*(8000000/4000.0)));
  1258     07A2  3004               	movlw	4
  1259     07A3  00FA               	movwf	??_main+2
  1260     07A4  300C               	movlw	12
  1261     07A5  00F9               	movwf	??_main+1
  1262     07A6  3033               	movlw	51
  1263     07A7  00F8               	movwf	??_main
  1264     07A8                     u997:
  1265     07A8  0BF8               	decfsz	??_main,f
  1266     07A9  2FA8               	goto	u997
  1267     07AA  0BF9               	decfsz	??_main+1,f
  1268     07AB  2FA8               	goto	u997
  1269     07AC  0BFA               	decfsz	??_main+2,f
  1270     07AD  2FA8               	goto	u997
  1271     07AE  2FAF               	nop2
  1272     07AF                     l1452:
  1273                           
  1274                           ;main.c: 113:                 PORTDbits.RD2 = 0;
  1275     07AF  1283               	bcf	3,5	;RP0=0, select bank0
  1276     07B0  1303               	bcf	3,6	;RP1=0, select bank0
  1277     07B1  1108               	bcf	8,2	;volatile
  1278                           
  1279                           ;main.c: 114:                 _delay((unsigned long)((500)*(8000000/4000.0)));
  1280     07B2  3006               	movlw	6
  1281     07B3  00FA               	movwf	??_main+2
  1282     07B4  3013               	movlw	19
  1283     07B5  00F9               	movwf	??_main+1
  1284     07B6  30AD               	movlw	173
  1285     07B7  00F8               	movwf	??_main
  1286     07B8                     u1007:
  1287     07B8  0BF8               	decfsz	??_main,f
  1288     07B9  2FB8               	goto	u1007
  1289     07BA  0BF9               	decfsz	??_main+1,f
  1290     07BB  2FB8               	goto	u1007
  1291     07BC  0BFA               	decfsz	??_main+2,f
  1292     07BD  2FB8               	goto	u1007
  1293     07BE  2FBF               	nop2
  1294                           
  1295                           ;main.c: 115:             }
  1296     07BF  3001               	movlw	1
  1297     07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1298     07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1299     07C2  07DF               	addwf	main@i_213,f
  1300     07C3  1803               	skipnc
  1301     07C4  0AE0               	incf	main@i_213+1,f
  1302     07C5  3000               	movlw	0
  1303     07C6  07E0               	addwf	main@i_213+1,f
  1304     07C7                     l1454:
  1305     07C7  0860               	movf	main@i_213+1,w
  1306     07C8  3A80               	xorlw	128
  1307     07C9  00FF               	movwf	btemp+1
  1308     07CA  3080               	movlw	128
  1309     07CB  027F               	subwf	btemp+1,w
  1310     07CC  1D03               	skipz
  1311     07CD  2FD0               	goto	u925
  1312     07CE  300A               	movlw	10
  1313     07CF  025F               	subwf	main@i_213,w
  1314     07D0                     u925:
  1315     07D0  1C03               	skipc
  1316     07D1  2FD3               	goto	u921
  1317     07D2  2FD4               	goto	u920
  1318     07D3                     u921:
  1319     07D3  2F9F               	goto	l181
  1320     07D4                     u920:
  1321     07D4                     l1456:
  1322                           
  1323                           ;main.c: 116:             _delay((unsigned long)((8000)*(8000000/4000.0)));
  1324     07D4  3052               	movlw	82
  1325     07D5  00FA               	movwf	??_main+2
  1326     07D6  302B               	movlw	43
  1327     07D7  00F9               	movwf	??_main+1
  1328     07D8  3000               	movlw	0
  1329     07D9  00F8               	movwf	??_main
  1330     07DA                     u1017:
  1331     07DA  0BF8               	decfsz	??_main,f
  1332     07DB  2FDA               	goto	u1017
  1333     07DC  0BF9               	decfsz	??_main+1,f
  1334     07DD  2FDA               	goto	u1017
  1335     07DE  0BFA               	decfsz	??_main+2,f
  1336     07DF  2FDA               	goto	u1017
  1337     07E0  0000               	nop
  1338     07E1  2F1B               	goto	l1412
  1339     07E2  120A  118A  2800   	ljmp	start
  1340     07E5                     __end_of_main:
  1341                           
  1342                           	psect	text1
  1343     0503                     __ptext1:	
  1344 ;; *************** function _strncmp *****************
  1345 ;; Defined at:
  1346 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strncmp.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;  l               1    0[COMMON] PTR const unsigned char 
  1349 ;;		 -> pass_user(6), 
  1350 ;;  r               1    1[COMMON] PTR const unsigned char 
  1351 ;;		 -> password(6), 
  1352 ;;  n               2    2[COMMON] unsigned int 
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;		None
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  2    0[COMMON] int 
  1357 ;; Registers used:
  1358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1364 ;;      Params:         4       0       0       0       0
  1365 ;;      Locals:         0       0       0       0       0
  1366 ;;      Temps:          2       0       0       0       0
  1367 ;;      Totals:         6       0       0       0       0
  1368 ;;Total ram usage:        6 bytes
  1369 ;; Hardware stack levels used: 2
  1370 ;; This function calls:
  1371 ;;		Nothing
  1372 ;; This function is called by:
  1373 ;;		_main
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377     0503                     _strncmp:	
  1378                           ;psect for function _strncmp
  1379                           
  1380     0503                     l1316:	
  1381                           ;incstack = 0
  1382                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  1383                           
  1384     0503  3001               	movlw	1
  1385     0504  02F2               	subwf	strncmp@n,f
  1386     0505  3000               	movlw	0
  1387     0506  1C03               	skipc
  1388     0507  03F3               	decf	strncmp@n+1,f
  1389     0508  02F3               	subwf	strncmp@n+1,f
  1390     0509  0A72               	incf	strncmp@n,w
  1391     050A  1D03               	skipz
  1392     050B  2D10               	goto	u771
  1393     050C  0A73               	incf	strncmp@n+1,w
  1394     050D  1D03               	btfss	3,2
  1395     050E  2D10               	goto	u771
  1396     050F  2D11               	goto	u770
  1397     0510                     u771:
  1398     0510  2D1E               	goto	l1326
  1399     0511                     u770:
  1400     0511                     l1318:
  1401     0511  01F0               	clrf	?_strncmp
  1402     0512  01F1               	clrf	?_strncmp+1
  1403     0513  2D5A               	goto	l731
  1404     0514                     l1322:
  1405     0514  3001               	movlw	1
  1406     0515  07F0               	addwf	strncmp@l,f
  1407     0516  3001               	movlw	1
  1408     0517  07F1               	addwf	strncmp@r,f
  1409     0518                     l1324:
  1410     0518  3001               	movlw	1
  1411     0519  02F2               	subwf	strncmp@n,f
  1412     051A  3000               	movlw	0
  1413     051B  1C03               	skipc
  1414     051C  03F3               	decf	strncmp@n+1,f
  1415     051D  02F3               	subwf	strncmp@n+1,f
  1416     051E                     l1326:
  1417     051E  0870               	movf	strncmp@l,w
  1418     051F  0084               	movwf	4
  1419     0520  1383               	bcf	3,7	;select IRP bank0
  1420     0521  0800               	movf	0,w
  1421     0522  1903               	btfsc	3,2
  1422     0523  2D25               	goto	u781
  1423     0524  2D26               	goto	u780
  1424     0525                     u781:
  1425     0525  2D48               	goto	l1334
  1426     0526                     u780:
  1427     0526                     l1328:
  1428     0526  0871               	movf	strncmp@r,w
  1429     0527  0084               	movwf	4
  1430     0528  120A  118A  2003  120A  118A  	fcall	stringdir
  1431     052D  3A00               	xorlw	0
  1432     052E  1903               	skipnz
  1433     052F  2D31               	goto	u791
  1434     0530  2D32               	goto	u790
  1435     0531                     u791:
  1436     0531  2D48               	goto	l1334
  1437     0532                     u790:
  1438     0532                     l1330:
  1439     0532  0872               	movf	strncmp@n,w
  1440     0533  0473               	iorwf	strncmp@n+1,w
  1441     0534  1903               	btfsc	3,2
  1442     0535  2D37               	goto	u801
  1443     0536  2D38               	goto	u800
  1444     0537                     u801:
  1445     0537  2D48               	goto	l1334
  1446     0538                     u800:
  1447     0538                     l1332:
  1448     0538  0871               	movf	strncmp@r,w
  1449     0539  0084               	movwf	4
  1450     053A  120A  118A  2003  120A  118A  	fcall	stringdir
  1451     053F  00F4               	movwf	??_strncmp
  1452     0540  0870               	movf	strncmp@l,w
  1453     0541  0084               	movwf	4
  1454     0542  0800               	movf	0,w
  1455     0543  0674               	xorwf	??_strncmp,w
  1456     0544  1903               	skipnz
  1457     0545  2D47               	goto	u811
  1458     0546  2D48               	goto	u810
  1459     0547                     u811:
  1460     0547  2D14               	goto	l1322
  1461     0548                     u810:
  1462     0548                     l1334:
  1463     0548  0871               	movf	strncmp@r,w
  1464     0549  0084               	movwf	4
  1465     054A  120A  118A  2003  120A  118A  	fcall	stringdir
  1466     054F  00F4               	movwf	??_strncmp
  1467     0550  0870               	movf	strncmp@l,w
  1468     0551  0084               	movwf	4
  1469     0552  0800               	movf	0,w
  1470     0553  00F5               	movwf	??_strncmp+1
  1471     0554  0874               	movf	??_strncmp,w
  1472     0555  0275               	subwf	??_strncmp+1,w
  1473     0556  00F0               	movwf	?_strncmp
  1474     0557  01F1               	clrf	?_strncmp+1
  1475     0558  1C03               	skipc
  1476     0559  03F1               	decf	?_strncmp+1,f
  1477     055A                     l731:
  1478     055A  0008               	return
  1479     055B                     __end_of_strncmp:
  1480                           
  1481                           	psect	text2
  1482     03A0                     __ptext2:	
  1483 ;; *************** function _keypad_init *****************
  1484 ;; Defined at:
  1485 ;;		line 38 in file "KEYPAD.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg, status,2, status,0
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1499 ;;      Params:         0       0       0       0       0
  1500 ;;      Locals:         0       0       0       0       0
  1501 ;;      Temps:          0       0       0       0       0
  1502 ;;      Totals:         0       0       0       0       0
  1503 ;;Total ram usage:        0 bytes
  1504 ;; Hardware stack levels used: 1
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_main
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512     03A0                     _keypad_init:	
  1513                           ;psect for function _keypad_init
  1514                           
  1515     03A0                     l1204:	
  1516                           ;incstack = 0
  1517                           ; Regs used in _keypad_init: [wreg+status,2+status,0]
  1518                           
  1519                           
  1520                           ;KEYPAD.c: 40:     TRISB &= ~(1<<0) & ~(1<<1) & ~(1<<2) & ~(1<<3);
  1521     03A0  30F0               	movlw	240
  1522     03A1  1683               	bsf	3,5	;RP0=1, select bank1
  1523     03A2  1303               	bcf	3,6	;RP1=0, select bank1
  1524     03A3  0586               	andwf	6,f	;volatile
  1525                           
  1526                           ;KEYPAD.c: 41:     TRISB |= (1<<4) | (1<<5) | (1<<6) | (1<<7);
  1527     03A4  30F0               	movlw	240
  1528     03A5  0486               	iorwf	6,f	;volatile
  1529     03A6                     l1206:
  1530                           
  1531                           ;KEYPAD.c: 42:     OPTION_REGbits.nRBPU = 0;
  1532     03A6  1381               	bcf	1,7	;volatile
  1533     03A7                     l63:
  1534     03A7  0008               	return
  1535     03A8                     __end_of_keypad_init:
  1536                           
  1537                           	psect	text3
  1538     055B                     __ptext3:	
  1539 ;; *************** function _keypad_getkey *****************
  1540 ;; Defined at:
  1541 ;;		line 57 in file "KEYPAD.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  letras         16    0[BANK0 ] unsigned char [4][4]
  1546 ;;  i               2   17[BANK0 ] int 
  1547 ;;  valor           1   16[BANK0 ] unsigned char 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      unsigned char 
  1550 ;; Registers used:
  1551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1557 ;;      Params:         0       0       0       0       0
  1558 ;;      Locals:         0      19       0       0       0
  1559 ;;      Temps:          4       0       0       0       0
  1560 ;;      Totals:         4      19       0       0       0
  1561 ;;Total ram usage:       23 bytes
  1562 ;; Hardware stack levels used: 1
  1563 ;; This function calls:
  1564 ;;		Nothing
  1565 ;; This function is called by:
  1566 ;;		_main
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570     055B                     _keypad_getkey:	
  1571                           ;psect for function _keypad_getkey
  1572                           
  1573     055B                     l1208:	
  1574                           ;incstack = 0
  1575                           ; Regs used in _keypad_getkey: [wreg-fsr0h+status,2+status,0+btemp+1]
  1576                           
  1577                           
  1578                           ;KEYPAD.c: 59: char letras[4][4]={ {'1','2','3','A'},
  1579     055B  3038               	movlw	keypad_getkey@F1398& (0+255)
  1580     055C  0084               	movwf	4
  1581     055D  3048               	movlw	low keypad_getkey@letras
  1582     055E  00F0               	movwf	??_keypad_getkey
  1583     055F  3010               	movlw	16
  1584     0560  00F1               	movwf	??_keypad_getkey+1
  1585     0561                     u550:
  1586     0561  1383               	bcf	3,7	;select IRP bank0
  1587     0562  0800               	movf	0,w
  1588     0563  00F2               	movwf	??_keypad_getkey+2
  1589     0564  0A04               	incf	4,w
  1590     0565  00F3               	movwf	??_keypad_getkey+3
  1591     0566  0870               	movf	??_keypad_getkey,w
  1592     0567  0084               	movwf	4
  1593     0568  0872               	movf	??_keypad_getkey+2,w
  1594     0569  0080               	movwf	0
  1595     056A  0A04               	incf	4,w
  1596     056B  00F0               	movwf	??_keypad_getkey
  1597     056C  0873               	movf	??_keypad_getkey+3,w
  1598     056D  0084               	movwf	4
  1599     056E  0BF1               	decfsz	??_keypad_getkey+1,f
  1600     056F  2D61               	goto	u550
  1601     0570                     l1210:
  1602     0570                     l1212:
  1603                           
  1604                           ;KEYPAD.c: 64: char valor=0;
  1605     0570  1283               	bcf	3,5	;RP0=0, select bank0
  1606     0571  1303               	bcf	3,6	;RP1=0, select bank0
  1607     0572  01D8               	clrf	keypad_getkey@valor
  1608     0573                     l1214:
  1609                           
  1610                           ;KEYPAD.c: 66: for(i=0;i<4;i++){
  1611     0573  01D9               	clrf	keypad_getkey@i
  1612     0574  01DA               	clrf	keypad_getkey@i+1
  1613     0575                     l1220:
  1614                           
  1615                           ;KEYPAD.c: 68:    if(i==0){
  1616     0575  1283               	bcf	3,5	;RP0=0, select bank0
  1617     0576  1303               	bcf	3,6	;RP1=0, select bank0
  1618     0577  0859               	movf	keypad_getkey@i,w
  1619     0578  045A               	iorwf	keypad_getkey@i+1,w
  1620     0579  1D03               	btfss	3,2
  1621     057A  2D7C               	goto	u561
  1622     057B  2D7D               	goto	u560
  1623     057C                     u561:
  1624     057C  2DA2               	goto	l1242
  1625     057D                     u560:
  1626     057D                     l1222:
  1627                           
  1628                           ;KEYPAD.c: 70:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(1<<1)|(0<<0);
  1629     057D  30FE               	movlw	254
  1630     057E  0086               	movwf	6	;volatile
  1631     057F                     l1224:
  1632                           
  1633                           ;KEYPAD.c: 71:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1634     057F  3042               	movlw	66
  1635     0580  00F0               	movwf	??_keypad_getkey
  1636     0581                     u1027:
  1637     0581  0BF0               	decfsz	??_keypad_getkey,f
  1638     0582  2D81               	goto	u1027
  1639     0583  0000               	nop
  1640                           
  1641                           ;KEYPAD.c: 72:       while (!(PORTB & (1<<4))){valor=letras[0][0];}
  1642     0584  2D87               	goto	l1228
  1643     0585                     l1226:
  1644     0585  0848               	movf	keypad_getkey@letras,w
  1645     0586  00D8               	movwf	keypad_getkey@valor
  1646     0587                     l1228:
  1647     0587  1283               	bcf	3,5	;RP0=0, select bank0
  1648     0588  1303               	bcf	3,6	;RP1=0, select bank0
  1649     0589  1E06               	btfss	6,4	;volatile
  1650     058A  2D8C               	goto	u571
  1651     058B  2D8D               	goto	u570
  1652     058C                     u571:
  1653     058C  2D85               	goto	l1226
  1654     058D                     u570:
  1655     058D  2D90               	goto	l1232
  1656     058E                     l1230:
  1657     058E  0849               	movf	keypad_getkey@letras+1,w
  1658     058F  00D8               	movwf	keypad_getkey@valor
  1659     0590                     l1232:
  1660     0590  1E86               	btfss	6,5	;volatile
  1661     0591  2D93               	goto	u581
  1662     0592  2D94               	goto	u580
  1663     0593                     u581:
  1664     0593  2D8E               	goto	l1230
  1665     0594                     u580:
  1666     0594  2D97               	goto	l1236
  1667     0595                     l1234:
  1668     0595  084A               	movf	keypad_getkey@letras+2,w
  1669     0596  00D8               	movwf	keypad_getkey@valor
  1670     0597                     l1236:
  1671     0597  1F06               	btfss	6,6	;volatile
  1672     0598  2D9A               	goto	u591
  1673     0599  2D9B               	goto	u590
  1674     059A                     u591:
  1675     059A  2D95               	goto	l1234
  1676     059B                     u590:
  1677     059B  2D9E               	goto	l1240
  1678     059C                     l1238:
  1679     059C  084B               	movf	keypad_getkey@letras+3,w
  1680     059D  00D8               	movwf	keypad_getkey@valor
  1681     059E                     l1240:
  1682     059E  1F86               	btfss	6,7	;volatile
  1683     059F  2DA1               	goto	u601
  1684     05A0  2DA2               	goto	u600
  1685     05A1                     u601:
  1686     05A1  2D9C               	goto	l1238
  1687     05A2                     u600:
  1688     05A2                     l1242:
  1689                           
  1690                           ;KEYPAD.c: 78:    if(i==1){
  1691     05A2  0359               	decf	keypad_getkey@i,w
  1692     05A3  045A               	iorwf	keypad_getkey@i+1,w
  1693     05A4  1D03               	btfss	3,2
  1694     05A5  2DA7               	goto	u611
  1695     05A6  2DA8               	goto	u610
  1696     05A7                     u611:
  1697     05A7  2DCD               	goto	l1264
  1698     05A8                     u610:
  1699     05A8                     l1244:
  1700                           
  1701                           ;KEYPAD.c: 79:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(0<<1)|(1<<0);
  1702     05A8  30FD               	movlw	253
  1703     05A9  0086               	movwf	6	;volatile
  1704     05AA                     l1246:
  1705                           
  1706                           ;KEYPAD.c: 80:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1707     05AA  3042               	movlw	66
  1708     05AB  00F0               	movwf	??_keypad_getkey
  1709     05AC                     u1037:
  1710     05AC  0BF0               	decfsz	??_keypad_getkey,f
  1711     05AD  2DAC               	goto	u1037
  1712     05AE  0000               	nop
  1713                           
  1714                           ;KEYPAD.c: 81:       while (!(PORTB & (1<<4))){valor=letras[1][0];}
  1715     05AF  2DB2               	goto	l1250
  1716     05B0                     l1248:
  1717     05B0  084C               	movf	keypad_getkey@letras+4,w
  1718     05B1  00D8               	movwf	keypad_getkey@valor
  1719     05B2                     l1250:
  1720     05B2  1283               	bcf	3,5	;RP0=0, select bank0
  1721     05B3  1303               	bcf	3,6	;RP1=0, select bank0
  1722     05B4  1E06               	btfss	6,4	;volatile
  1723     05B5  2DB7               	goto	u621
  1724     05B6  2DB8               	goto	u620
  1725     05B7                     u621:
  1726     05B7  2DB0               	goto	l1248
  1727     05B8                     u620:
  1728     05B8  2DBB               	goto	l1254
  1729     05B9                     l1252:
  1730     05B9  084D               	movf	keypad_getkey@letras+5,w
  1731     05BA  00D8               	movwf	keypad_getkey@valor
  1732     05BB                     l1254:
  1733     05BB  1E86               	btfss	6,5	;volatile
  1734     05BC  2DBE               	goto	u631
  1735     05BD  2DBF               	goto	u630
  1736     05BE                     u631:
  1737     05BE  2DB9               	goto	l1252
  1738     05BF                     u630:
  1739     05BF  2DC2               	goto	l1258
  1740     05C0                     l1256:
  1741     05C0  084E               	movf	keypad_getkey@letras+6,w
  1742     05C1  00D8               	movwf	keypad_getkey@valor
  1743     05C2                     l1258:
  1744     05C2  1F06               	btfss	6,6	;volatile
  1745     05C3  2DC5               	goto	u641
  1746     05C4  2DC6               	goto	u640
  1747     05C5                     u641:
  1748     05C5  2DC0               	goto	l1256
  1749     05C6                     u640:
  1750     05C6  2DC9               	goto	l1262
  1751     05C7                     l1260:
  1752     05C7  084F               	movf	keypad_getkey@letras+7,w
  1753     05C8  00D8               	movwf	keypad_getkey@valor
  1754     05C9                     l1262:
  1755     05C9  1F86               	btfss	6,7	;volatile
  1756     05CA  2DCC               	goto	u651
  1757     05CB  2DCD               	goto	u650
  1758     05CC                     u651:
  1759     05CC  2DC7               	goto	l1260
  1760     05CD                     u650:
  1761     05CD                     l1264:
  1762                           
  1763                           ;KEYPAD.c: 87:    if(i==2){
  1764     05CD  3002               	movlw	2
  1765     05CE  0659               	xorwf	keypad_getkey@i,w
  1766     05CF  045A               	iorwf	keypad_getkey@i+1,w
  1767     05D0  1D03               	btfss	3,2
  1768     05D1  2DD3               	goto	u661
  1769     05D2  2DD4               	goto	u660
  1770     05D3                     u661:
  1771     05D3  2DF9               	goto	l1286
  1772     05D4                     u660:
  1773     05D4                     l1266:
  1774                           
  1775                           ;KEYPAD.c: 88:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(0<<2)|(1<<1)|(1<<0);
  1776     05D4  30FB               	movlw	251
  1777     05D5  0086               	movwf	6	;volatile
  1778     05D6                     l1268:
  1779                           
  1780                           ;KEYPAD.c: 89:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1781     05D6  3042               	movlw	66
  1782     05D7  00F0               	movwf	??_keypad_getkey
  1783     05D8                     u1047:
  1784     05D8  0BF0               	decfsz	??_keypad_getkey,f
  1785     05D9  2DD8               	goto	u1047
  1786     05DA  0000               	nop
  1787                           
  1788                           ;KEYPAD.c: 90:       while (!(PORTB & (1<<4))){valor=letras[2][0];}
  1789     05DB  2DDE               	goto	l1272
  1790     05DC                     l1270:
  1791     05DC  0850               	movf	keypad_getkey@letras+8,w
  1792     05DD  00D8               	movwf	keypad_getkey@valor
  1793     05DE                     l1272:
  1794     05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1795     05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1796     05E0  1E06               	btfss	6,4	;volatile
  1797     05E1  2DE3               	goto	u671
  1798     05E2  2DE4               	goto	u670
  1799     05E3                     u671:
  1800     05E3  2DDC               	goto	l1270
  1801     05E4                     u670:
  1802     05E4  2DE7               	goto	l1276
  1803     05E5                     l1274:
  1804     05E5  0851               	movf	keypad_getkey@letras+9,w
  1805     05E6  00D8               	movwf	keypad_getkey@valor
  1806     05E7                     l1276:
  1807     05E7  1E86               	btfss	6,5	;volatile
  1808     05E8  2DEA               	goto	u681
  1809     05E9  2DEB               	goto	u680
  1810     05EA                     u681:
  1811     05EA  2DE5               	goto	l1274
  1812     05EB                     u680:
  1813     05EB  2DEE               	goto	l1280
  1814     05EC                     l1278:
  1815     05EC  0852               	movf	keypad_getkey@letras+10,w
  1816     05ED  00D8               	movwf	keypad_getkey@valor
  1817     05EE                     l1280:
  1818     05EE  1F06               	btfss	6,6	;volatile
  1819     05EF  2DF1               	goto	u691
  1820     05F0  2DF2               	goto	u690
  1821     05F1                     u691:
  1822     05F1  2DEC               	goto	l1278
  1823     05F2                     u690:
  1824     05F2  2DF5               	goto	l1284
  1825     05F3                     l1282:
  1826     05F3  0853               	movf	keypad_getkey@letras+11,w
  1827     05F4  00D8               	movwf	keypad_getkey@valor
  1828     05F5                     l1284:
  1829     05F5  1F86               	btfss	6,7	;volatile
  1830     05F6  2DF8               	goto	u701
  1831     05F7  2DF9               	goto	u700
  1832     05F8                     u701:
  1833     05F8  2DF3               	goto	l1282
  1834     05F9                     u700:
  1835     05F9                     l1286:
  1836                           
  1837                           ;KEYPAD.c: 96:    if(i==3){
  1838     05F9  3003               	movlw	3
  1839     05FA  0659               	xorwf	keypad_getkey@i,w
  1840     05FB  045A               	iorwf	keypad_getkey@i+1,w
  1841     05FC  1D03               	btfss	3,2
  1842     05FD  2DFF               	goto	u711
  1843     05FE  2E00               	goto	u710
  1844     05FF                     u711:
  1845     05FF  2E25               	goto	l1308
  1846     0600                     u710:
  1847     0600                     l1288:
  1848                           
  1849                           ;KEYPAD.c: 97:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(0<<3)|(1<<2)|(1<<1)|(1<<0);
  1850     0600  30F7               	movlw	247
  1851     0601  0086               	movwf	6	;volatile
  1852     0602                     l1290:
  1853                           
  1854                           ;KEYPAD.c: 98:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1855     0602  3042               	movlw	66
  1856     0603  00F0               	movwf	??_keypad_getkey
  1857     0604                     u1057:
  1858     0604  0BF0               	decfsz	??_keypad_getkey,f
  1859     0605  2E04               	goto	u1057
  1860     0606  0000               	nop
  1861                           
  1862                           ;KEYPAD.c: 99:       while (!(PORTB & (1<<4))){valor=letras[3][0];}
  1863     0607  2E0A               	goto	l1294
  1864     0608                     l1292:
  1865     0608  0854               	movf	keypad_getkey@letras+12,w
  1866     0609  00D8               	movwf	keypad_getkey@valor
  1867     060A                     l1294:
  1868     060A  1283               	bcf	3,5	;RP0=0, select bank0
  1869     060B  1303               	bcf	3,6	;RP1=0, select bank0
  1870     060C  1E06               	btfss	6,4	;volatile
  1871     060D  2E0F               	goto	u721
  1872     060E  2E10               	goto	u720
  1873     060F                     u721:
  1874     060F  2E08               	goto	l1292
  1875     0610                     u720:
  1876     0610  2E13               	goto	l1298
  1877     0611                     l1296:
  1878     0611  0855               	movf	keypad_getkey@letras+13,w
  1879     0612  00D8               	movwf	keypad_getkey@valor
  1880     0613                     l1298:
  1881     0613  1E86               	btfss	6,5	;volatile
  1882     0614  2E16               	goto	u731
  1883     0615  2E17               	goto	u730
  1884     0616                     u731:
  1885     0616  2E11               	goto	l1296
  1886     0617                     u730:
  1887     0617  2E1A               	goto	l1302
  1888     0618                     l1300:
  1889     0618  0856               	movf	keypad_getkey@letras+14,w
  1890     0619  00D8               	movwf	keypad_getkey@valor
  1891     061A                     l1302:
  1892     061A  1F06               	btfss	6,6	;volatile
  1893     061B  2E1D               	goto	u741
  1894     061C  2E1E               	goto	u740
  1895     061D                     u741:
  1896     061D  2E18               	goto	l1300
  1897     061E                     u740:
  1898     061E  2E21               	goto	l1306
  1899     061F                     l1304:
  1900     061F  0857               	movf	keypad_getkey@letras+15,w
  1901     0620  00D8               	movwf	keypad_getkey@valor
  1902     0621                     l1306:
  1903     0621  1F86               	btfss	6,7	;volatile
  1904     0622  2E24               	goto	u751
  1905     0623  2E25               	goto	u750
  1906     0624                     u751:
  1907     0624  2E1F               	goto	l1304
  1908     0625                     u750:
  1909     0625                     l1308:
  1910                           
  1911                           ;KEYPAD.c: 104:    }
  1912     0625  3001               	movlw	1
  1913     0626  07D9               	addwf	keypad_getkey@i,f
  1914     0627  1803               	skipnc
  1915     0628  0ADA               	incf	keypad_getkey@i+1,f
  1916     0629  3000               	movlw	0
  1917     062A  07DA               	addwf	keypad_getkey@i+1,f
  1918     062B                     l1310:
  1919     062B  085A               	movf	keypad_getkey@i+1,w
  1920     062C  3A80               	xorlw	128
  1921     062D  00FF               	movwf	btemp+1
  1922     062E  3080               	movlw	128
  1923     062F  027F               	subwf	btemp+1,w
  1924     0630  1D03               	skipz
  1925     0631  2E34               	goto	u765
  1926     0632  3004               	movlw	4
  1927     0633  0259               	subwf	keypad_getkey@i,w
  1928     0634                     u765:
  1929     0634  1C03               	skipc
  1930     0635  2E37               	goto	u761
  1931     0636  2E38               	goto	u760
  1932     0637                     u761:
  1933     0637  2D75               	goto	l1220
  1934     0638                     u760:
  1935     0638                     l1312:
  1936                           
  1937                           ;KEYPAD.c: 106:    return valor;
  1938     0638  1283               	bcf	3,5	;RP0=0, select bank0
  1939     0639  1303               	bcf	3,6	;RP1=0, select bank0
  1940     063A  0858               	movf	keypad_getkey@valor,w
  1941     063B                     l122:
  1942     063B  0008               	return
  1943     063C                     __end_of_keypad_getkey:
  1944                           
  1945                           	psect	text4
  1946     03E7                     __ptext4:	
  1947 ;; *************** function _LCD_String_xy *****************
  1948 ;; Defined at:
  1949 ;;		line 170 in file "LCD.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;  row             1    wreg     unsigned char 
  1952 ;;  pos             1    4[COMMON] unsigned char 
  1953 ;;  msg             1    5[COMMON] PTR const unsigned char 
  1954 ;;		 -> STR_4(18), STR_3(17), STR_2(15), STR_1(13), 
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;  row             1    6[COMMON] unsigned char 
  1957 ;;  location        1    7[COMMON] unsigned char 
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  1    wreg      void 
  1960 ;; Registers used:
  1961 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1967 ;;      Params:         2       0       0       0       0
  1968 ;;      Locals:         2       0       0       0       0
  1969 ;;      Temps:          0       0       0       0       0
  1970 ;;      Totals:         4       0       0       0       0
  1971 ;;Total ram usage:        4 bytes
  1972 ;; Hardware stack levels used: 1
  1973 ;; Hardware stack levels required when called: 2
  1974 ;; This function calls:
  1975 ;;		_LCD_Command
  1976 ;;		_LCD_String
  1977 ;; This function is called by:
  1978 ;;		_main
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982     03E7                     _LCD_String_xy:	
  1983                           ;psect for function _LCD_String_xy
  1984                           
  1985                           
  1986                           ;incstack = 0
  1987                           ; Regs used in _LCD_String_xy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1988                           ;LCD_String_xy@row stored from wreg
  1989     03E7  00F6               	movwf	LCD_String_xy@row
  1990     03E8                     l1186:
  1991     03E8                     l1188:
  1992                           
  1993                           ;LCD.c: 173:     if(row<=1)
  1994     03E8  3002               	movlw	2
  1995     03E9  0276               	subwf	LCD_String_xy@row,w
  1996     03EA  1803               	skipnc
  1997     03EB  2BED               	goto	u541
  1998     03EC  2BEE               	goto	u540
  1999     03ED                     u541:
  2000     03ED  2BF9               	goto	l1194
  2001     03EE                     u540:
  2002     03EE                     l1190:
  2003                           
  2004                           ;LCD.c: 174:     {;LCD.c: 175:         location=(0x80) | ((pos) & 0x0f);
  2005     03EE  0874               	movf	LCD_String_xy@pos,w
  2006     03EF  390F               	andlw	15
  2007     03F0  3880               	iorlw	128
  2008     03F1  00F7               	movwf	LCD_String_xy@location
  2009     03F2                     l1192:
  2010                           
  2011                           ;LCD.c: 176:         LCD_Command(location);
  2012     03F2  0877               	movf	LCD_String_xy@location,w
  2013     03F3  120A  118A  245D  120A  118A  	fcall	_LCD_Command
  2014                           
  2015                           ;LCD.c: 177:     }
  2016     03F8  2C03               	goto	l1198
  2017     03F9                     l1194:
  2018                           
  2019                           ;LCD.c: 179:     {;LCD.c: 180:         location=(0xC0) | ((pos) & 0x0f);
  2020     03F9  0874               	movf	LCD_String_xy@pos,w
  2021     03FA  390F               	andlw	15
  2022     03FB  38C0               	iorlw	192
  2023     03FC  00F7               	movwf	LCD_String_xy@location
  2024     03FD                     l1196:
  2025                           
  2026                           ;LCD.c: 181:         LCD_Command(location);
  2027     03FD  0877               	movf	LCD_String_xy@location,w
  2028     03FE  120A  118A  245D  120A  118A  	fcall	_LCD_Command
  2029     0403                     l1198:
  2030                           
  2031                           ;LCD.c: 185:     LCD_String(msg);
  2032     0403  0875               	movf	LCD_String_xy@msg,w
  2033     0404  00F3               	movwf	LCD_String@msg
  2034     0405  120A  118A  23CB  120A  118A  	fcall	_LCD_String
  2035     040A                     l49:
  2036     040A  0008               	return
  2037     040B                     __end_of_LCD_String_xy:
  2038                           
  2039                           	psect	text5
  2040     03CB                     __ptext5:	
  2041 ;; *************** function _LCD_String *****************
  2042 ;; Defined at:
  2043 ;;		line 160 in file "LCD.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;  msg             1    3[COMMON] PTR const unsigned char 
  2046 ;;		 -> STR_4(18), STR_3(17), STR_2(15), STR_1(13), 
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;		None
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  1    wreg      void 
  2051 ;; Registers used:
  2052 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2058 ;;      Params:         1       0       0       0       0
  2059 ;;      Locals:         0       0       0       0       0
  2060 ;;      Temps:          0       0       0       0       0
  2061 ;;      Totals:         1       0       0       0       0
  2062 ;;Total ram usage:        1 bytes
  2063 ;; Hardware stack levels used: 1
  2064 ;; Hardware stack levels required when called: 1
  2065 ;; This function calls:
  2066 ;;		_LCD_Char
  2067 ;; This function is called by:
  2068 ;;		_LCD_String_xy
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072     03CB                     _LCD_String:	
  2073                           ;psect for function _LCD_String
  2074                           
  2075     03CB                     l1140:	
  2076                           ;incstack = 0
  2077                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2078                           
  2079                           
  2080                           ;LCD.c: 160: void LCD_String(const char *msg);LCD.c: 161: {;LCD.c: 162:  while((*msg)!=0
      +                          )
  2081     03CB  2BDA               	goto	l1146
  2082     03CC                     l1142:
  2083                           
  2084                           ;LCD.c: 163:  {;LCD.c: 164:    LCD_Char(*msg);
  2085     03CC  0873               	movf	LCD_String@msg,w
  2086     03CD  0084               	movwf	4
  2087     03CE  120A  118A  2003  120A  118A  	fcall	stringdir
  2088     03D3  120A  118A  2493  120A  118A  	fcall	_LCD_Char
  2089     03D8                     l1144:
  2090                           
  2091                           ;LCD.c: 165:    msg++;
  2092     03D8  3001               	movlw	1
  2093     03D9  07F3               	addwf	LCD_String@msg,f
  2094     03DA                     l1146:
  2095                           
  2096                           ;LCD.c: 162:  while((*msg)!=0)
  2097     03DA  0873               	movf	LCD_String@msg,w
  2098     03DB  0084               	movwf	4
  2099     03DC  120A  118A  2003  120A  118A  	fcall	stringdir
  2100     03E1  3A00               	xorlw	0
  2101     03E2  1D03               	skipz
  2102     03E3  2BE5               	goto	u491
  2103     03E4  2BE6               	goto	u490
  2104     03E5                     u491:
  2105     03E5  2BCC               	goto	l1142
  2106     03E6                     u490:
  2107     03E6                     l44:
  2108     03E6  0008               	return
  2109     03E7                     __end_of_LCD_String:
  2110                           
  2111                           	psect	text6
  2112     04C9                     __ptext6:	
  2113 ;; *************** function _LCD_Load_Custom_Chars *****************
  2114 ;; Defined at:
  2115 ;;		line 84 in file "LCD.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;		None
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  j               1    6[COMMON] unsigned char 
  2120 ;;  i               1    7[COMMON] unsigned char 
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2130 ;;      Params:         0       0       0       0       0
  2131 ;;      Locals:         2       0       0       0       0
  2132 ;;      Temps:          3       0       0       0       0
  2133 ;;      Totals:         5       0       0       0       0
  2134 ;;Total ram usage:        5 bytes
  2135 ;; Hardware stack levels used: 1
  2136 ;; Hardware stack levels required when called: 1
  2137 ;; This function calls:
  2138 ;;		_LCD_Char
  2139 ;;		_LCD_Command
  2140 ;; This function is called by:
  2141 ;;		_main
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145     04C9                     _LCD_Load_Custom_Chars:	
  2146                           ;psect for function _LCD_Load_Custom_Chars
  2147                           
  2148     04C9                     l1162:	
  2149                           ;incstack = 0
  2150                           ; Regs used in _LCD_Load_Custom_Chars: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2151                           
  2152                           
  2153                           ;LCD.c: 87:     for (unsigned char i = 0; i < 3; i++) {
  2154     04C9  01F7               	clrf	LCD_Load_Custom_Chars@i
  2155     04CA                     l1168:
  2156                           
  2157                           ;LCD.c: 88:         LCD_Command(0x40 + (i * 8));
  2158     04CA  0877               	movf	LCD_Load_Custom_Chars@i,w
  2159     04CB  00F3               	movwf	??_LCD_Load_Custom_Chars
  2160     04CC  3002               	movlw	2
  2161     04CD                     u505:
  2162     04CD  1003               	clrc
  2163     04CE  0DF3               	rlf	??_LCD_Load_Custom_Chars,f
  2164     04CF  3EFF               	addlw	-1
  2165     04D0  1D03               	skipz
  2166     04D1  2CCD               	goto	u505
  2167     04D2  1003               	clrc
  2168     04D3  0D73               	rlf	??_LCD_Load_Custom_Chars,w
  2169     04D4  3E40               	addlw	64
  2170     04D5  120A  118A  245D  120A  118A  	fcall	_LCD_Command
  2171     04DA                     l1170:
  2172                           
  2173                           ;LCD.c: 89:         for (unsigned char j = 0; j < 8; j++) {
  2174     04DA  01F6               	clrf	LCD_Load_Custom_Chars@j
  2175     04DB                     l1176:
  2176                           
  2177                           ;LCD.c: 90:             LCD_Char(customChars[i][j]);
  2178     04DB  0877               	movf	LCD_Load_Custom_Chars@i,w
  2179     04DC  00F3               	movwf	??_LCD_Load_Custom_Chars
  2180     04DD  3003               	movlw	3
  2181     04DE                     u515:
  2182     04DE  1003               	clrc
  2183     04DF  0DF3               	rlf	??_LCD_Load_Custom_Chars,f
  2184     04E0  3EFF               	addlw	-1
  2185     04E1  1D03               	skipz
  2186     04E2  2CDE               	goto	u515
  2187     04E3  3020               	movlw	(low (_customChars| 0))& (0+255)
  2188     04E4  0773               	addwf	??_LCD_Load_Custom_Chars,w
  2189     04E5  00F4               	movwf	??_LCD_Load_Custom_Chars+1
  2190     04E6  0876               	movf	LCD_Load_Custom_Chars@j,w
  2191     04E7  0774               	addwf	??_LCD_Load_Custom_Chars+1,w
  2192     04E8  00F5               	movwf	??_LCD_Load_Custom_Chars+2
  2193     04E9  0875               	movf	??_LCD_Load_Custom_Chars+2,w
  2194     04EA  0084               	movwf	4
  2195     04EB  1383               	bcf	3,7	;select IRP bank0
  2196     04EC  0800               	movf	0,w
  2197     04ED  120A  118A  2493  120A  118A  	fcall	_LCD_Char
  2198     04F2                     l1178:
  2199                           
  2200                           ;LCD.c: 91:         }
  2201     04F2  3001               	movlw	1
  2202     04F3  07F6               	addwf	LCD_Load_Custom_Chars@j,f
  2203     04F4                     l1180:
  2204     04F4  3008               	movlw	8
  2205     04F5  0276               	subwf	LCD_Load_Custom_Chars@j,w
  2206     04F6  1C03               	skipc
  2207     04F7  2CF9               	goto	u521
  2208     04F8  2CFA               	goto	u520
  2209     04F9                     u521:
  2210     04F9  2CDB               	goto	l1176
  2211     04FA                     u520:
  2212     04FA                     l1182:
  2213                           
  2214                           ;LCD.c: 92:     }
  2215     04FA  3001               	movlw	1
  2216     04FB  07F7               	addwf	LCD_Load_Custom_Chars@i,f
  2217     04FC                     l1184:
  2218     04FC  3003               	movlw	3
  2219     04FD  0277               	subwf	LCD_Load_Custom_Chars@i,w
  2220     04FE  1C03               	skipc
  2221     04FF  2D01               	goto	u531
  2222     0500  2D02               	goto	u530
  2223     0501                     u531:
  2224     0501  2CCA               	goto	l1168
  2225     0502                     u530:
  2226     0502                     l26:
  2227     0502  0008               	return
  2228     0503                     __end_of_LCD_Load_Custom_Chars:
  2229                           
  2230                           	psect	text7
  2231     0493                     __ptext7:	
  2232 ;; *************** function _LCD_Char *****************
  2233 ;; Defined at:
  2234 ;;		line 136 in file "LCD.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  dat             1    wreg     unsigned char 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  dat             1    2[COMMON] unsigned char 
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		wreg, status,2, status,0
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2248 ;;      Params:         0       0       0       0       0
  2249 ;;      Locals:         1       0       0       0       0
  2250 ;;      Temps:          2       0       0       0       0
  2251 ;;      Totals:         3       0       0       0       0
  2252 ;;Total ram usage:        3 bytes
  2253 ;; Hardware stack levels used: 1
  2254 ;; This function calls:
  2255 ;;		Nothing
  2256 ;; This function is called by:
  2257 ;;		_LCD_Load_Custom_Chars
  2258 ;;		_LCD_String
  2259 ;;		_main
  2260 ;;		_LCD_Custom_Char
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264     0493                     _LCD_Char:	
  2265                           ;psect for function _LCD_Char
  2266                           
  2267                           
  2268                           ;incstack = 0
  2269                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  2270                           ;LCD_Char@dat stored from wreg
  2271     0493  00F2               	movwf	LCD_Char@dat
  2272     0494                     l1100:
  2273                           
  2274                           ;LCD.c: 136: void LCD_Char(unsigned char dat);LCD.c: 137: {;LCD.c: 138:  PORTC = (PORTC 
      +                          & 0x0f) | (0xF0 & dat);
  2275     0494  30F0               	movlw	240
  2276     0495  0572               	andwf	LCD_Char@dat,w
  2277     0496  00F0               	movwf	??_LCD_Char
  2278     0497  1283               	bcf	3,5	;RP0=0, select bank0
  2279     0498  1303               	bcf	3,6	;RP1=0, select bank0
  2280     0499  0807               	movf	7,w	;volatile
  2281     049A  390F               	andlw	15
  2282     049B  0470               	iorwf	??_LCD_Char,w
  2283     049C  0087               	movwf	7	;volatile
  2284     049D                     l1102:
  2285                           
  2286                           ;LCD.c: 139:  PORTCbits.RC0 = 1;
  2287     049D  1407               	bsf	7,0	;volatile
  2288     049E                     l1104:
  2289                           
  2290                           ;LCD.c: 140:  PORTCbits.RC1 = 1;
  2291     049E  1487               	bsf	7,1	;volatile
  2292     049F                     l1106:
  2293                           
  2294                           ;LCD.c: 141:  __nop();
  2295     049F  0000               	nop
  2296     04A0                     l1108:
  2297                           
  2298                           ;LCD.c: 142:  PORTCbits.RC1 = 0;
  2299     04A0  1283               	bcf	3,5	;RP0=0, select bank0
  2300     04A1  1303               	bcf	3,6	;RP1=0, select bank0
  2301     04A2  1087               	bcf	7,1	;volatile
  2302     04A3                     l1110:
  2303                           
  2304                           ;LCD.c: 143:  _delay((unsigned long)((1)*(8000000/4000.0)));
  2305     04A3  3003               	movlw	3
  2306     04A4  00F1               	movwf	??_LCD_Char+1
  2307     04A5  3097               	movlw	151
  2308     04A6  00F0               	movwf	??_LCD_Char
  2309     04A7                     u1067:
  2310     04A7  0BF0               	decfsz	??_LCD_Char,f
  2311     04A8  2CA7               	goto	u1067
  2312     04A9  0BF1               	decfsz	??_LCD_Char+1,f
  2313     04AA  2CA7               	goto	u1067
  2314     04AB  2CAC               	nop2
  2315     04AC                     l1112:
  2316                           
  2317                           ;LCD.c: 144:     PORTC = (unsigned char)((PORTC & 0x0f) | (dat<<4));
  2318     04AC  0872               	movf	LCD_Char@dat,w
  2319     04AD  00F0               	movwf	??_LCD_Char
  2320     04AE  3004               	movlw	4
  2321     04AF                     u475:
  2322     04AF  1003               	clrc
  2323     04B0  0DF0               	rlf	??_LCD_Char,f
  2324     04B1  3EFF               	addlw	-1
  2325     04B2  1D03               	skipz
  2326     04B3  2CAF               	goto	u475
  2327     04B4  1283               	bcf	3,5	;RP0=0, select bank0
  2328     04B5  1303               	bcf	3,6	;RP1=0, select bank0
  2329     04B6  0807               	movf	7,w	;volatile
  2330     04B7  390F               	andlw	15
  2331     04B8  0470               	iorwf	??_LCD_Char,w
  2332     04B9  0087               	movwf	7	;volatile
  2333     04BA                     l1114:
  2334                           
  2335                           ;LCD.c: 145:  PORTCbits.RC1 = 1;
  2336     04BA  1487               	bsf	7,1	;volatile
  2337     04BB                     l1116:
  2338                           
  2339                           ;LCD.c: 146:  __nop();
  2340     04BB  0000               	nop
  2341     04BC                     l1118:
  2342                           
  2343                           ;LCD.c: 147:  PORTCbits.RC1 = 0;
  2344     04BC  1283               	bcf	3,5	;RP0=0, select bank0
  2345     04BD  1303               	bcf	3,6	;RP1=0, select bank0
  2346     04BE  1087               	bcf	7,1	;volatile
  2347                           
  2348                           ;LCD.c: 148:  _delay((unsigned long)((3)*(8000000/4000.0)));
  2349     04BF  3008               	movlw	8
  2350     04C0  00F1               	movwf	??_LCD_Char+1
  2351     04C1  30C9               	movlw	201
  2352     04C2  00F0               	movwf	??_LCD_Char
  2353     04C3                     u1077:
  2354     04C3  0BF0               	decfsz	??_LCD_Char,f
  2355     04C4  2CC3               	goto	u1077
  2356     04C5  0BF1               	decfsz	??_LCD_Char+1,f
  2357     04C6  2CC3               	goto	u1077
  2358     04C7  2CC8               	nop2
  2359     04C8                     l32:
  2360     04C8  0008               	return
  2361     04C9                     __end_of_LCD_Char:
  2362                           
  2363                           	psect	text8
  2364     0433                     __ptext8:	
  2365 ;; *************** function _LCD_Init *****************
  2366 ;; Defined at:
  2367 ;;		line 73 in file "LCD.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;		None
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;		None
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      void 
  2374 ;; Registers used:
  2375 ;;		wreg, status,2, status,0, pclath, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2381 ;;      Params:         0       0       0       0       0
  2382 ;;      Locals:         0       0       0       0       0
  2383 ;;      Temps:          2       0       0       0       0
  2384 ;;      Totals:         2       0       0       0       0
  2385 ;;Total ram usage:        2 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; Hardware stack levels required when called: 1
  2388 ;; This function calls:
  2389 ;;		_LCD_Command
  2390 ;; This function is called by:
  2391 ;;		_main
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395     0433                     _LCD_Init:	
  2396                           ;psect for function _LCD_Init
  2397                           
  2398     0433                     l1148:	
  2399                           ;incstack = 0
  2400                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2401                           
  2402                           
  2403                           ;LCD.c: 75:     TRISC = 0;
  2404     0433  1683               	bsf	3,5	;RP0=1, select bank1
  2405     0434  1303               	bcf	3,6	;RP1=0, select bank1
  2406     0435  0187               	clrf	7	;volatile
  2407     0436                     l1150:
  2408                           
  2409                           ;LCD.c: 76:     _delay((unsigned long)((15)*(8000000/4000.0)));
  2410     0436  3027               	movlw	39
  2411     0437  00F4               	movwf	??_LCD_Init+1
  2412     0438  30F5               	movlw	245
  2413     0439  00F3               	movwf	??_LCD_Init
  2414     043A                     u1087:
  2415     043A  0BF3               	decfsz	??_LCD_Init,f
  2416     043B  2C3A               	goto	u1087
  2417     043C  0BF4               	decfsz	??_LCD_Init+1,f
  2418     043D  2C3A               	goto	u1087
  2419     043E                     l1152:
  2420                           
  2421                           ;LCD.c: 77:     LCD_Command(0x02);
  2422     043E  3002               	movlw	2
  2423     043F  120A  118A  245D  120A  118A  	fcall	_LCD_Command
  2424     0444                     l1154:
  2425                           
  2426                           ;LCD.c: 78:     LCD_Command(0x28);
  2427     0444  3028               	movlw	40
  2428     0445  120A  118A  245D  120A  118A  	fcall	_LCD_Command
  2429     044A                     l1156:
  2430                           
  2431                           ;LCD.c: 79:     LCD_Command(0x01);
  2432     044A  3001               	movlw	1
  2433     044B  120A  118A  245D  120A  118A  	fcall	_LCD_Command
  2434     0450                     l1158:
  2435                           
  2436                           ;LCD.c: 80:     LCD_Command(0x0c);
  2437     0450  300C               	movlw	12
  2438     0451  120A  118A  245D  120A  118A  	fcall	_LCD_Command
  2439     0456                     l1160:
  2440                           
  2441                           ;LCD.c: 81:     LCD_Command(0x06);
  2442     0456  3006               	movlw	6
  2443     0457  120A  118A  245D  120A  118A  	fcall	_LCD_Command
  2444     045C                     l19:
  2445     045C  0008               	return
  2446     045D                     __end_of_LCD_Init:
  2447                           
  2448                           	psect	text9
  2449     03A8                     __ptext9:	
  2450 ;; *************** function _LCD_Clear *****************
  2451 ;; Defined at:
  2452 ;;		line 201 in file "LCD.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;		None
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;		None
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      void 
  2459 ;; Registers used:
  2460 ;;		wreg, status,2, status,0, pclath, cstack
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2466 ;;      Params:         0       0       0       0       0
  2467 ;;      Locals:         0       0       0       0       0
  2468 ;;      Temps:          2       0       0       0       0
  2469 ;;      Totals:         2       0       0       0       0
  2470 ;;Total ram usage:        2 bytes
  2471 ;; Hardware stack levels used: 1
  2472 ;; Hardware stack levels required when called: 1
  2473 ;; This function calls:
  2474 ;;		_LCD_Command
  2475 ;; This function is called by:
  2476 ;;		_main
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480     03A8                     _LCD_Clear:	
  2481                           ;psect for function _LCD_Clear
  2482                           
  2483     03A8                     l1200:	
  2484                           ;incstack = 0
  2485                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2486                           
  2487                           
  2488                           ;LCD.c: 203:     LCD_Command(0x01);
  2489     03A8  3001               	movlw	1
  2490     03A9  120A  118A  245D  120A  118A  	fcall	_LCD_Command
  2491     03AE                     l1202:
  2492                           
  2493                           ;LCD.c: 204:     _delay((unsigned long)((3)*(8000000/4000.0)));
  2494     03AE  3008               	movlw	8
  2495     03AF  00F4               	movwf	??_LCD_Clear+1
  2496     03B0  30C9               	movlw	201
  2497     03B1  00F3               	movwf	??_LCD_Clear
  2498     03B2                     u1097:
  2499     03B2  0BF3               	decfsz	??_LCD_Clear,f
  2500     03B3  2BB2               	goto	u1097
  2501     03B4  0BF4               	decfsz	??_LCD_Clear+1,f
  2502     03B5  2BB2               	goto	u1097
  2503     03B6  2BB7               	nop2
  2504     03B7                     l52:
  2505     03B7  0008               	return
  2506     03B8                     __end_of_LCD_Clear:
  2507                           
  2508                           	psect	text10
  2509     045D                     __ptext10:	
  2510 ;; *************** function _LCD_Command *****************
  2511 ;; Defined at:
  2512 ;;		line 107 in file "LCD.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  cmd             1    wreg     unsigned char 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  cmd             1    2[COMMON] unsigned char 
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		wreg, status,2, status,0
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2526 ;;      Params:         0       0       0       0       0
  2527 ;;      Locals:         1       0       0       0       0
  2528 ;;      Temps:          2       0       0       0       0
  2529 ;;      Totals:         3       0       0       0       0
  2530 ;;Total ram usage:        3 bytes
  2531 ;; Hardware stack levels used: 1
  2532 ;; This function calls:
  2533 ;;		Nothing
  2534 ;; This function is called by:
  2535 ;;		_LCD_Init
  2536 ;;		_LCD_Load_Custom_Chars
  2537 ;;		_LCD_String_xy
  2538 ;;		_LCD_Clear
  2539 ;;		_main
  2540 ;;		_LCD_Custom_Char
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544     045D                     _LCD_Command:	
  2545                           ;psect for function _LCD_Command
  2546                           
  2547                           
  2548                           ;incstack = 0
  2549                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  2550                           ;LCD_Command@cmd stored from wreg
  2551     045D  00F2               	movwf	LCD_Command@cmd
  2552     045E                     l1120:
  2553                           
  2554                           ;LCD.c: 107: void LCD_Command(unsigned char cmd );LCD.c: 108: {;LCD.c: 109:  PORTC = (PO
      +                          RTC & 0x0f) |(0xF0 & cmd);
  2555     045E  30F0               	movlw	240
  2556     045F  0572               	andwf	LCD_Command@cmd,w
  2557     0460  00F0               	movwf	??_LCD_Command
  2558     0461  1283               	bcf	3,5	;RP0=0, select bank0
  2559     0462  1303               	bcf	3,6	;RP1=0, select bank0
  2560     0463  0807               	movf	7,w	;volatile
  2561     0464  390F               	andlw	15
  2562     0465  0470               	iorwf	??_LCD_Command,w
  2563     0466  0087               	movwf	7	;volatile
  2564     0467                     l1122:
  2565                           
  2566                           ;LCD.c: 110:  PORTCbits.RC0 = 0;
  2567     0467  1007               	bcf	7,0	;volatile
  2568     0468                     l1124:
  2569                           
  2570                           ;LCD.c: 111:  PORTCbits.RC1 = 1;
  2571     0468  1487               	bsf	7,1	;volatile
  2572     0469                     l1126:
  2573                           
  2574                           ;LCD.c: 112:  __nop();
  2575     0469  0000               	nop
  2576     046A                     l1128:
  2577                           
  2578                           ;LCD.c: 113:  PORTCbits.RC1 = 0;
  2579     046A  1283               	bcf	3,5	;RP0=0, select bank0
  2580     046B  1303               	bcf	3,6	;RP1=0, select bank0
  2581     046C  1087               	bcf	7,1	;volatile
  2582     046D                     l1130:
  2583                           
  2584                           ;LCD.c: 114:  _delay((unsigned long)((1)*(8000000/4000.0)));
  2585     046D  3003               	movlw	3
  2586     046E  00F1               	movwf	??_LCD_Command+1
  2587     046F  3097               	movlw	151
  2588     0470  00F0               	movwf	??_LCD_Command
  2589     0471                     u1107:
  2590     0471  0BF0               	decfsz	??_LCD_Command,f
  2591     0472  2C71               	goto	u1107
  2592     0473  0BF1               	decfsz	??_LCD_Command+1,f
  2593     0474  2C71               	goto	u1107
  2594     0475  2C76               	nop2
  2595     0476                     l1132:
  2596                           
  2597                           ;LCD.c: 115:     PORTC = (unsigned char)((PORTC & 0x0f) | (cmd<<4));
  2598     0476  0872               	movf	LCD_Command@cmd,w
  2599     0477  00F0               	movwf	??_LCD_Command
  2600     0478  3004               	movlw	4
  2601     0479                     u485:
  2602     0479  1003               	clrc
  2603     047A  0DF0               	rlf	??_LCD_Command,f
  2604     047B  3EFF               	addlw	-1
  2605     047C  1D03               	skipz
  2606     047D  2C79               	goto	u485
  2607     047E  1283               	bcf	3,5	;RP0=0, select bank0
  2608     047F  1303               	bcf	3,6	;RP1=0, select bank0
  2609     0480  0807               	movf	7,w	;volatile
  2610     0481  390F               	andlw	15
  2611     0482  0470               	iorwf	??_LCD_Command,w
  2612     0483  0087               	movwf	7	;volatile
  2613     0484                     l1134:
  2614                           
  2615                           ;LCD.c: 116:  PORTCbits.RC1 = 1;
  2616     0484  1487               	bsf	7,1	;volatile
  2617     0485                     l1136:
  2618                           
  2619                           ;LCD.c: 117:  __nop();
  2620     0485  0000               	nop
  2621     0486                     l1138:
  2622                           
  2623                           ;LCD.c: 118:  PORTCbits.RC1 = 0;
  2624     0486  1283               	bcf	3,5	;RP0=0, select bank0
  2625     0487  1303               	bcf	3,6	;RP1=0, select bank0
  2626     0488  1087               	bcf	7,1	;volatile
  2627                           
  2628                           ;LCD.c: 119:  _delay((unsigned long)((3)*(8000000/4000.0)));
  2629     0489  3008               	movlw	8
  2630     048A  00F1               	movwf	??_LCD_Command+1
  2631     048B  30C9               	movlw	201
  2632     048C  00F0               	movwf	??_LCD_Command
  2633     048D                     u1117:
  2634     048D  0BF0               	decfsz	??_LCD_Command,f
  2635     048E  2C8D               	goto	u1117
  2636     048F  0BF1               	decfsz	??_LCD_Command+1,f
  2637     0490  2C8D               	goto	u1117
  2638     0491  2C92               	nop2
  2639     0492                     l29:
  2640     0492  0008               	return
  2641     0493                     __end_of_LCD_Command:
  2642     0002                     ___latbits      equ	2
  2643     007E                     btemp           set	126	;btemp
  2644     007E                     wtemp0          set	126
  2645                           
  2646                           	psect	config
  2647                           
  2648                           ;Config register CONFIG1 @ 0x2007
  2649                           ;	Oscillator Selection bits
  2650                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  2651                           ;	Watchdog Timer Enable bit
  2652                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2653                           ;	Power-up Timer Enable bit
  2654                           ;	PWRTE = OFF, PWRT disabled
  2655                           ;	RE3/MCLR pin function select bit
  2656                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2657                           ;	Code Protection bit
  2658                           ;	CP = OFF, Program memory code protection is disabled
  2659                           ;	Data Code Protection bit
  2660                           ;	CPD = OFF, Data memory code protection is disabled
  2661                           ;	Brown Out Reset Selection bits
  2662                           ;	BOREN = OFF, BOR disabled
  2663                           ;	Internal External Switchover bit
  2664                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2665                           ;	Fail-Safe Clock Monitor Enabled bit
  2666                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2667                           ;	Low Voltage Programming Enable bit
  2668                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2669                           ;	In-Circuit Debugger Mode bit
  2670                           ;	DEBUG = 0x1, unprogrammed default
  2671     2007                     	org	8199
  2672     2007  20D5               	dw	8405
  2673                           
  2674                           ;Config register CONFIG2 @ 0x2008
  2675                           ;	Brown-out Reset Selection bit
  2676                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2677                           ;	Flash Program Memory Self Write Enable bits
  2678                           ;	WRT = OFF, Write protection off
  2679     2008                     	org	8200
  2680     2008  3FFF               	dw	16383

Data Sizes:
    Strings     63
    Constant    6
    Data        40
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     26      75
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_String@msg	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[13]), STR_2(CODE[15]), STR_3(CODE[17]), STR_4(CODE[18]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[13]), STR_2(CODE[15]), STR_3(CODE[17]), STR_4(CODE[18]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 6
		 -> pass_user(BANK0[6]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 6
		 -> password(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_LCD_Load_Custom_Chars
    _main->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Load_Custom_Chars->_LCD_Char
    _LCD_Load_Custom_Chars->_LCD_Command
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command

Critical Paths under _main in BANK0

    _main->_keypad_getkey

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    1748
                                              8 COMMON     3     3      0
                                             19 BANK0      7     7      0
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                           _LCD_Init
              _LCD_Load_Custom_Chars
                      _LCD_String_xy
                      _keypad_getkey
                        _keypad_init
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              6     2      4     182
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keypad_getkey                                       23    23      0     542
                                              0 COMMON     4     4      0
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        4     2      2     312
                                              4 COMMON     4     2      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           1     0      1     104
                                              3 COMMON     1     0      1
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Load_Custom_Chars                                5     5      0     274
                                              3 COMMON     5     5      0
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             3     3      0      58
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      58
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      58
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      58
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Char
   _LCD_Clear
     _LCD_Command
   _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_Load_Custom_Chars
     _LCD_Char
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _keypad_getkey
   _keypad_init
   _strncmp

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     26      75     93.8%
BITBANK0            80      0       0      0.0%
COMMON              14     11      11     78.6%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      86      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Oct 03 10:41:53 2024

                            pc 0002                   ?_LCD_Command 0070                             l32 04C8  
                           l26 0502                             l19 045C                             l52 03B7  
                           l44 03E6                             l29 0492                             l63 03A7  
                           l49 040A                             fsr 0004                    ?_LCD_String 0073  
                          l122 063B                            l181 079F                            l175 06E6  
                          l178 0740                            l731 055A                            u520 04FA  
                          u600 05A2                            u521 04F9                            u505 04CD  
                          u601 05A1                            u530 0502                            u610 05A8  
                          u531 0501                            u515 04DE                            u611 05A7  
                          u540 03EE                            u700 05F9                            u620 05B8  
                          u541 03ED                            u701 05F8                            u621 05B7  
                          u710 0600                            u630 05BF                            u550 0561  
                          u711 05FF                            u631 05BE                            u720 0610  
                          u640 05C6                            u560 057D                            u800 0538  
                          u721 060F                            u641 05C5                            u561 057C  
                          u801 0537                            u490 03E6                            u730 0617  
                          u650 05CD                            u570 058D                            u810 0548  
                          u475 04AF                            u491 03E5                            u731 0616  
                          u651 05CC                            u571 058C                            u811 0547  
                          u740 061E                            u660 05D4                            u580 0594  
                          u900 071B                            u485 0479                            u741 061D  
                          u661 05D3                            u581 0593                            u901 071A  
                          u750 0625                            u670 05E4                            u590 059B  
                          u910 0774                            u751 0624                            u671 05E3  
                          u591 059A                            u911 0773                            u760 0638  
                          u680 05EB                            u920 07D4                            u761 0637  
                          u681 05EA                            u921 07D3                            u905 0717  
                          u690 05F2                            u770 0511                            u850 0668  
                          u691 05F1                            u771 0510                            u915 0770  
                          u851 0667                            u780 0526                            u860 068C  
                          u765 0634                            u781 0525                            u925 07D0  
                          u861 068B                            u790 0532                            u870 06B0  
                          u791 0531                            u871 06AF                            u855 0664  
                          u880 06B6                            u881 06B5                            u937 06A2  
                          u890 06CE                            u947 06EF                            u891 06CD  
                          u957 06FF                            u967 0749                            u977 0759  
                          u987 077A                            u997 07A8                            _idx 0064  
                          fsr0 0004                            indf 0000                    LCD_Char@dat 0072  
                         l1100 0494                           l1110 04A3                           l1102 049D  
                         l1120 045E                           l1200 03A8                           l1112 04AC  
                         l1104 049E                           l1130 046D                           l1122 0467  
                         l1202 03AE                           l1114 04BA                           l1106 049F  
                         l1210 0570                           l1132 0476                           l1124 0468  
                         l1116 04BB                           l1108 04A0                           l1140 03CB  
                         l1300 0618                           l1220 0575                           l1212 0570  
                         l1204 03A0                           l1134 0484                           l1126 0469  
                         l1150 0436                           l1118 04BC                           l1142 03CC  
                         l1310 062B                           l1302 061A                           l1230 058E  
                         l1222 057D                           l1214 0573                           l1206 03A6  
                         l1136 0485                           l1128 046A                           l1160 0456  
                         l1152 043E                           l1144 03D8                           l1312 0638  
                         l1304 061F                           l1240 059E                           l1232 0590  
                         l1224 057F                           l1208 055B                           l1400 06E2  
                         l1138 0486                           l1154 0444                           l1170 04DA  
                         l1162 04C9                           l1146 03DA                           l1306 0621  
                         l1250 05B2                           l1234 0595                           l1226 0585  
                         l1242 05A2                           l1330 0532                           l1322 0514  
                         l1410 070E                           l1156 044A                           l1148 0433  
                         l1180 04F4                           l1308 0625                           l1260 05C7  
                         l1252 05B9                           l1244 05A8                           l1236 0597  
                         l1228 0587                           l1332 0538                           l1324 0518  
                         l1316 0503                           l1420 0736                           l1412 071B  
                         l1158 0450                           l1182 04FA                           l1190 03EE  
                         l1270 05DC                           l1262 05C9                           l1254 05BB  
                         l1246 05AA                           l1238 059C                           l1334 0548  
                         l1318 0511                           l1326 051E                           l1430 0750  
                         l1422 073C                           l1406 06E9                           l1414 0720  
                         l1184 04FC                           l1176 04DB                           l1168 04CA  
                         l1192 03F2                           l1280 05EE                           l1272 05DE  
                         l1256 05C0                           l1248 05B0                           l1264 05CD  
                         l1328 0526                           l1440 078C                           l1432 0767  
                         l1416 0728                           l1408 06F6                           l1360 064F  
                         l1178 04F2                           l1194 03F9                           l1186 03E8  
                         l1290 0602                           l1282 05F3                           l1274 05E5  
                         l1266 05D4                           l1258 05C2                           l1450 07A2  
                         l1442 0795                           l1434 0774                           l1418 072D  
                         l1370 0676                           l1362 0654                           l1354 063C  
                         l1196 03FD                           l1188 03E8                           l1292 0608  
                         l1284 05F5                           l1276 05E7                           l1268 05D6  
                         l1452 07AF                           l1444 079B                           l1428 0743  
                         l1436 0781                           l1380 0692                           l1372 067C  
                         l1364 0659                           l1356 0640                           l1198 0403  
                         l1294 060A                           l1278 05EC                           l1286 05F9  
                         l1454 07C7                           l1390 06B6                           l1382 069A  
                         l1374 067F                           l1366 0668                           l1438 0787  
                         l1358 064A                           l1296 0611                           l1288 0600  
                         l1456 07D4                           l1392 06BB                           l1384 069C  
                         l1376 0687                           l1368 066D                           l1298 0613  
                         l1394 06CE                           l1386 06A8                           l1378 068C  
                         l1396 06D3                           l1388 06B0                           l1398 06DC  
                         STR_1 0041                           STR_2 0032                           STR_3 0021  
                         STR_4 000F                           u1007 07B8                           u1017 07DA  
                         u1107 0471                           u1027 0581                           u1117 048D  
                         u1037 05AC                           u1047 05D8                           u1057 0604  
                         u1067 04A7                           u1077 04C3                           u1087 043A  
                         u1097 03B2                           _main 063C                           btemp 007E  
                         start 0000                  _LCD_String_xy 03E7               __end_of_LCD_Char 04C9  
             __end_of_LCD_Init 045D                          ?_main 0070                          _PORTB 0006  
                        _PORTC 0007                          _PORTD 0008                          _TRISB 0086  
                        _TRISC 0087                          _TRISD 0088                   ?_keypad_init 0070  
                        main@i 005B                          pclath 000A                          status 0003  
                        wtemp0 007E                __end_of_strncmp 055B                 ?_LCD_String_xy 0074  
              __initialization 07E5                   __end_of_main 07E5                         ??_main 0078  
            __end_of_LCD_Clear 03B8            keypad_getkey@letras 0048                         _ANSELH 0189  
             LCD_String_xy@msg 0075               LCD_String_xy@pos 0074               LCD_String_xy@row 0076  
                       _OSCCON 008F               __end_of_password 000F                      ??_strncmp 0074  
      ??_LCD_Load_Custom_Chars 0073                      ?_LCD_Char 0070        __end_of__initialization 07FC  
                    ?_LCD_Init 0070                ??_LCD_String_xy 0076                 __pcstackCOMMON 0070  
                 __pidataBANK0 040B                   ??_LCD_String 0074                 _OPTION_REGbits 0081  
                   __pbssBANK0 0062                     ??_LCD_Char 0070                     ??_LCD_Init 0073  
           __end_of_LCD_String 03E7                     __pmaintext 063C                  _keypad_getkey 055B  
                   __stringtab 0003                  LCD_String@msg 0073                        __ptext1 0503  
                      __ptext2 03A0                        __ptext3 055B                        __ptext4 03E7  
                      __ptext5 03CB                        __ptext6 04C9                        __ptext7 0493  
                      __ptext8 0433                        __ptext9 03A8                 ?_keypad_getkey 0070  
                    _LCD_Clear 03A8                        main@key 0061                        _strncmp 0503  
         end_of_initialization 07FC                 LCD_Command@cmd 0072                      _PORTCbits 0007  
                    _PORTDbits 0008                     ?_LCD_Clear 0070  __end_of_LCD_Load_Custom_Chars 0503  
                ??_LCD_Command 0070                ??_keypad_getkey 0070             keypad_getkey@F1398 0038  
          start_initialization 07E5             keypad_getkey@valor 0058          __end_of_LCD_String_xy 040B  
                   init_fetch0 03B8                    __pdataBANK0 0020            __end_of_LCD_Command 0493  
                    ___latbits 0002                  __pcstackBANK0 0048                    ??_LCD_Clear 0073  
                ??_keypad_init 0070                      __pstrings 0003          LCD_String_xy@location 0077  
                     ?_strncmp 0070                       _LCD_Char 0493                       _LCD_Init 0433  
                    _pass_user 0065            __end_of_keypad_init 03A8                    _LCD_Command 045D  
       LCD_Load_Custom_Chars@i 0077         LCD_Load_Custom_Chars@j 0076                    __stringbase 0008  
                    main@i_211 005D                      main@i_213 005F             __end_of__stringtab 0009  
                  _customChars 0020                       __ptext10 045D                    _keypad_init 03A0  
                     _intentos 0062                       _password 0009          _LCD_Load_Custom_Chars 04C9  
                   _LCD_String 03CB          __end_of_keypad_getkey 063C                       init_ram0 03BC  
                    stringcode 0003                       strncmp@l 0070                       strncmp@n 0072  
                     strncmp@r 0071                       stringdir 0003                       stringtab 0003  
               keypad_getkey@i 0059         ?_LCD_Load_Custom_Chars 0070  
